//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HostelManagmentProject.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback regstOperationCompleted;
        
        private System.Threading.SendOrPostCallback reggkOperationCompleted;
        
        private System.Threading.SendOrPostCallback regrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback regadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback isStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback isRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback isGatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetgatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback mutateStNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback mutateRtNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback mutateGKNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback logged_GatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback addhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback rtnamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback hostelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback gknamesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::HostelManagmentProject.Properties.Settings.Default.HostelManagmentProject_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event regstCompletedEventHandler regstCompleted;
        
        /// <remarks/>
        public event reggkCompletedEventHandler reggkCompleted;
        
        /// <remarks/>
        public event regrtCompletedEventHandler regrtCompleted;
        
        /// <remarks/>
        public event regadminCompletedEventHandler regadminCompleted;
        
        /// <remarks/>
        public event isAdminCompletedEventHandler isAdminCompleted;
        
        /// <remarks/>
        public event isStudentCompletedEventHandler isStudentCompleted;
        
        /// <remarks/>
        public event isRTCompletedEventHandler isRTCompleted;
        
        /// <remarks/>
        public event isGatekeeperCompletedEventHandler isGatekeeperCompleted;
        
        /// <remarks/>
        public event canresetAdminCompletedEventHandler canresetAdminCompleted;
        
        /// <remarks/>
        public event canresetgatekeeperCompletedEventHandler canresetgatekeeperCompleted;
        
        /// <remarks/>
        public event canresetstudentCompletedEventHandler canresetstudentCompleted;
        
        /// <remarks/>
        public event canresetrtCompletedEventHandler canresetrtCompleted;
        
        /// <remarks/>
        public event mutateStNotificationCompletedEventHandler mutateStNotificationCompleted;
        
        /// <remarks/>
        public event loggedstudentCompletedEventHandler loggedstudentCompleted;
        
        /// <remarks/>
        public event mutateRtNotificationsCompletedEventHandler mutateRtNotificationsCompleted;
        
        /// <remarks/>
        public event loggedRtCompletedEventHandler loggedRtCompleted;
        
        /// <remarks/>
        public event mutateGKNotificationsCompletedEventHandler mutateGKNotificationsCompleted;
        
        /// <remarks/>
        public event logged_GatekeeperCompletedEventHandler logged_GatekeeperCompleted;
        
        /// <remarks/>
        public event addhostelCompletedEventHandler addhostelCompleted;
        
        /// <remarks/>
        public event rtnamesCompletedEventHandler rtnamesCompleted;
        
        /// <remarks/>
        public event hostelsCompletedEventHandler hostelsCompleted;
        
        /// <remarks/>
        public event gknamesCompletedEventHandler gknamesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regst([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regst", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regstAsync(string username, string password, string question, string answer) {
            this.regstAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regstAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regstOperationCompleted == null)) {
                this.regstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregstOperationCompleted);
            }
            this.InvokeAsync("regst", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regstOperationCompleted, userState);
        }
        
        private void OnregstOperationCompleted(object arg) {
            if ((this.regstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regstCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/reggk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void reggk([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("reggk", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void reggkAsync(string username, string password, string question, string answer) {
            this.reggkAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void reggkAsync(string username, string password, string question, string answer, object userState) {
            if ((this.reggkOperationCompleted == null)) {
                this.reggkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreggkOperationCompleted);
            }
            this.InvokeAsync("reggk", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.reggkOperationCompleted, userState);
        }
        
        private void OnreggkOperationCompleted(object arg) {
            if ((this.reggkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reggkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regrt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regrt", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regrtAsync(string username, string password, string question, string answer) {
            this.regrtAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regrtAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regrtOperationCompleted == null)) {
                this.regrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregrtOperationCompleted);
            }
            this.InvokeAsync("regrt", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regrtOperationCompleted, userState);
        }
        
        private void OnregrtOperationCompleted(object arg) {
            if ((this.regrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regrtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regadmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regadmin", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regadminAsync(string username, string password, string question, string answer) {
            this.regadminAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regadminAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regadminOperationCompleted == null)) {
                this.regadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregadminOperationCompleted);
            }
            this.InvokeAsync("regadmin", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regadminOperationCompleted, userState);
        }
        
        private void OnregadminOperationCompleted(object arg) {
            if ((this.regadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isAdminResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isAdminResultSpecified) {
            object[] results = this.Invoke("isAdmin", new object[] {
                        username,
                        password});
            isAdminResult = ((bool)(results[0]));
            isAdminResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isAdminAsync(string username, string password) {
            this.isAdminAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isAdminAsync(string username, string password, object userState) {
            if ((this.isAdminOperationCompleted == null)) {
                this.isAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAdminOperationCompleted);
            }
            this.InvokeAsync("isAdmin", new object[] {
                        username,
                        password}, this.isAdminOperationCompleted, userState);
        }
        
        private void OnisAdminOperationCompleted(object arg) {
            if ((this.isAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAdminCompleted(this, new isAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isStudentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isStudentResultSpecified) {
            object[] results = this.Invoke("isStudent", new object[] {
                        username,
                        password});
            isStudentResult = ((bool)(results[0]));
            isStudentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isStudentAsync(string username, string password) {
            this.isStudentAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isStudentAsync(string username, string password, object userState) {
            if ((this.isStudentOperationCompleted == null)) {
                this.isStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisStudentOperationCompleted);
            }
            this.InvokeAsync("isStudent", new object[] {
                        username,
                        password}, this.isStudentOperationCompleted, userState);
        }
        
        private void OnisStudentOperationCompleted(object arg) {
            if ((this.isStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isStudentCompleted(this, new isStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isRTResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isRTResultSpecified) {
            object[] results = this.Invoke("isRT", new object[] {
                        username,
                        password});
            isRTResult = ((bool)(results[0]));
            isRTResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isRTAsync(string username, string password) {
            this.isRTAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isRTAsync(string username, string password, object userState) {
            if ((this.isRTOperationCompleted == null)) {
                this.isRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRTOperationCompleted);
            }
            this.InvokeAsync("isRT", new object[] {
                        username,
                        password}, this.isRTOperationCompleted, userState);
        }
        
        private void OnisRTOperationCompleted(object arg) {
            if ((this.isRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRTCompleted(this, new isRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isGatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isGatekeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isGatekeeperResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isGatekeeperResultSpecified) {
            object[] results = this.Invoke("isGatekeeper", new object[] {
                        username,
                        password});
            isGatekeeperResult = ((bool)(results[0]));
            isGatekeeperResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isGatekeeperAsync(string username, string password) {
            this.isGatekeeperAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isGatekeeperAsync(string username, string password, object userState) {
            if ((this.isGatekeeperOperationCompleted == null)) {
                this.isGatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisGatekeeperOperationCompleted);
            }
            this.InvokeAsync("isGatekeeper", new object[] {
                        username,
                        password}, this.isGatekeeperOperationCompleted, userState);
        }
        
        private void OnisGatekeeperOperationCompleted(object arg) {
            if ((this.isGatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isGatekeeperCompleted(this, new isGatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetAdminResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetAdminResultSpecified) {
            object[] results = this.Invoke("canresetAdmin", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetAdminResult = ((bool)(results[0]));
            canresetAdminResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetAdminAsync(string n1, string q1, string a1, string pass) {
            this.canresetAdminAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetAdminAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetAdminOperationCompleted == null)) {
                this.canresetAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetAdminOperationCompleted);
            }
            this.InvokeAsync("canresetAdmin", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetAdminOperationCompleted, userState);
        }
        
        private void OncanresetAdminOperationCompleted(object arg) {
            if ((this.canresetAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetAdminCompleted(this, new canresetAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetgatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetgatekeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetgatekeeperResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetgatekeeperResultSpecified) {
            object[] results = this.Invoke("canresetgatekeeper", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetgatekeeperResult = ((bool)(results[0]));
            canresetgatekeeperResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetgatekeeperAsync(string n1, string q1, string a1, string pass) {
            this.canresetgatekeeperAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetgatekeeperAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetgatekeeperOperationCompleted == null)) {
                this.canresetgatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetgatekeeperOperationCompleted);
            }
            this.InvokeAsync("canresetgatekeeper", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetgatekeeperOperationCompleted, userState);
        }
        
        private void OncanresetgatekeeperOperationCompleted(object arg) {
            if ((this.canresetgatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetgatekeeperCompleted(this, new canresetgatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetstudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetstudentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetstudentResultSpecified) {
            object[] results = this.Invoke("canresetstudent", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetstudentResult = ((bool)(results[0]));
            canresetstudentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetstudentAsync(string n1, string q1, string a1, string pass) {
            this.canresetstudentAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetstudentAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetstudentOperationCompleted == null)) {
                this.canresetstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetstudentOperationCompleted);
            }
            this.InvokeAsync("canresetstudent", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetstudentOperationCompleted, userState);
        }
        
        private void OncanresetstudentOperationCompleted(object arg) {
            if ((this.canresetstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetstudentCompleted(this, new canresetstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetrt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetrtResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetrtResultSpecified) {
            object[] results = this.Invoke("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetrtResult = ((bool)(results[0]));
            canresetrtResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass) {
            this.canresetrtAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetrtOperationCompleted == null)) {
                this.canresetrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetrtOperationCompleted);
            }
            this.InvokeAsync("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetrtOperationCompleted, userState);
        }
        
        private void OncanresetrtOperationCompleted(object arg) {
            if ((this.canresetrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetrtCompleted(this, new canresetrtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/mutateStNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cnotification[] mutateStNotification() {
            object[] results = this.Invoke("mutateStNotification", new object[0]);
            return ((Cnotification[])(results[0]));
        }
        
        /// <remarks/>
        public void mutateStNotificationAsync() {
            this.mutateStNotificationAsync(null);
        }
        
        /// <remarks/>
        public void mutateStNotificationAsync(object userState) {
            if ((this.mutateStNotificationOperationCompleted == null)) {
                this.mutateStNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmutateStNotificationOperationCompleted);
            }
            this.InvokeAsync("mutateStNotification", new object[0], this.mutateStNotificationOperationCompleted, userState);
        }
        
        private void OnmutateStNotificationOperationCompleted(object arg) {
            if ((this.mutateStNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mutateStNotificationCompleted(this, new mutateStNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string loggedstudent() {
            object[] results = this.Invoke("loggedstudent", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loggedstudentAsync() {
            this.loggedstudentAsync(null);
        }
        
        /// <remarks/>
        public void loggedstudentAsync(object userState) {
            if ((this.loggedstudentOperationCompleted == null)) {
                this.loggedstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedstudentOperationCompleted);
            }
            this.InvokeAsync("loggedstudent", new object[0], this.loggedstudentOperationCompleted, userState);
        }
        
        private void OnloggedstudentOperationCompleted(object arg) {
            if ((this.loggedstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedstudentCompleted(this, new loggedstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/mutateRtNotifications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cnotification[] mutateRtNotifications() {
            object[] results = this.Invoke("mutateRtNotifications", new object[0]);
            return ((Cnotification[])(results[0]));
        }
        
        /// <remarks/>
        public void mutateRtNotificationsAsync() {
            this.mutateRtNotificationsAsync(null);
        }
        
        /// <remarks/>
        public void mutateRtNotificationsAsync(object userState) {
            if ((this.mutateRtNotificationsOperationCompleted == null)) {
                this.mutateRtNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmutateRtNotificationsOperationCompleted);
            }
            this.InvokeAsync("mutateRtNotifications", new object[0], this.mutateRtNotificationsOperationCompleted, userState);
        }
        
        private void OnmutateRtNotificationsOperationCompleted(object arg) {
            if ((this.mutateRtNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mutateRtNotificationsCompleted(this, new mutateRtNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string loggedRt() {
            object[] results = this.Invoke("loggedRt", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loggedRtAsync() {
            this.loggedRtAsync(null);
        }
        
        /// <remarks/>
        public void loggedRtAsync(object userState) {
            if ((this.loggedRtOperationCompleted == null)) {
                this.loggedRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedRtOperationCompleted);
            }
            this.InvokeAsync("loggedRt", new object[0], this.loggedRtOperationCompleted, userState);
        }
        
        private void OnloggedRtOperationCompleted(object arg) {
            if ((this.loggedRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedRtCompleted(this, new loggedRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/mutateGKNotifications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cnotification[] mutateGKNotifications() {
            object[] results = this.Invoke("mutateGKNotifications", new object[0]);
            return ((Cnotification[])(results[0]));
        }
        
        /// <remarks/>
        public void mutateGKNotificationsAsync() {
            this.mutateGKNotificationsAsync(null);
        }
        
        /// <remarks/>
        public void mutateGKNotificationsAsync(object userState) {
            if ((this.mutateGKNotificationsOperationCompleted == null)) {
                this.mutateGKNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmutateGKNotificationsOperationCompleted);
            }
            this.InvokeAsync("mutateGKNotifications", new object[0], this.mutateGKNotificationsOperationCompleted, userState);
        }
        
        private void OnmutateGKNotificationsOperationCompleted(object arg) {
            if ((this.mutateGKNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mutateGKNotificationsCompleted(this, new mutateGKNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/logged_Gatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string logged_Gatekeeper() {
            object[] results = this.Invoke("logged_Gatekeeper", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync() {
            this.logged_GatekeeperAsync(null);
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync(object userState) {
            if ((this.logged_GatekeeperOperationCompleted == null)) {
                this.logged_GatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogged_GatekeeperOperationCompleted);
            }
            this.InvokeAsync("logged_Gatekeeper", new object[0], this.logged_GatekeeperOperationCompleted, userState);
        }
        
        private void Onlogged_GatekeeperOperationCompleted(object arg) {
            if ((this.logged_GatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logged_GatekeeperCompleted(this, new logged_GatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addhostel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostname, int roomcapcity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool roomcapcitySpecified, int nuofrooms, [System.Xml.Serialization.XmlIgnoreAttribute()] bool nuofroomsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string g1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string g2) {
            this.Invoke("addhostel", new object[] {
                        hostname,
                        roomcapcity,
                        roomcapcitySpecified,
                        nuofrooms,
                        nuofroomsSpecified,
                        r1,
                        r2,
                        g1,
                        g2});
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostname, int roomcapcity, bool roomcapcitySpecified, int nuofrooms, bool nuofroomsSpecified, string r1, string r2, string g1, string g2) {
            this.addhostelAsync(hostname, roomcapcity, roomcapcitySpecified, nuofrooms, nuofroomsSpecified, r1, r2, g1, g2, null);
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostname, int roomcapcity, bool roomcapcitySpecified, int nuofrooms, bool nuofroomsSpecified, string r1, string r2, string g1, string g2, object userState) {
            if ((this.addhostelOperationCompleted == null)) {
                this.addhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddhostelOperationCompleted);
            }
            this.InvokeAsync("addhostel", new object[] {
                        hostname,
                        roomcapcity,
                        roomcapcitySpecified,
                        nuofrooms,
                        nuofroomsSpecified,
                        r1,
                        r2,
                        g1,
                        g2}, this.addhostelOperationCompleted, userState);
        }
        
        private void OnaddhostelOperationCompleted(object arg) {
            if ((this.addhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addhostelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/rtnames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] rtnames() {
            object[] results = this.Invoke("rtnames", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void rtnamesAsync() {
            this.rtnamesAsync(null);
        }
        
        /// <remarks/>
        public void rtnamesAsync(object userState) {
            if ((this.rtnamesOperationCompleted == null)) {
                this.rtnamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrtnamesOperationCompleted);
            }
            this.InvokeAsync("rtnames", new object[0], this.rtnamesOperationCompleted, userState);
        }
        
        private void OnrtnamesOperationCompleted(object arg) {
            if ((this.rtnamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rtnamesCompleted(this, new rtnamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/hostels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Hostel[] hostels() {
            object[] results = this.Invoke("hostels", new object[0]);
            return ((Hostel[])(results[0]));
        }
        
        /// <remarks/>
        public void hostelsAsync() {
            this.hostelsAsync(null);
        }
        
        /// <remarks/>
        public void hostelsAsync(object userState) {
            if ((this.hostelsOperationCompleted == null)) {
                this.hostelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhostelsOperationCompleted);
            }
            this.InvokeAsync("hostels", new object[0], this.hostelsOperationCompleted, userState);
        }
        
        private void OnhostelsOperationCompleted(object arg) {
            if ((this.hostelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hostelsCompleted(this, new hostelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/gknames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] gknames() {
            object[] results = this.Invoke("gknames", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void gknamesAsync() {
            this.gknamesAsync(null);
        }
        
        /// <remarks/>
        public void gknamesAsync(object userState) {
            if ((this.gknamesOperationCompleted == null)) {
                this.gknamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngknamesOperationCompleted);
            }
            this.InvokeAsync("gknames", new object[0], this.gknamesOperationCompleted, userState);
        }
        
        private void OngknamesOperationCompleted(object arg) {
            if ((this.gknamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gknamesCompleted(this, new gknamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cnotification {
        
        private string notificationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CRT {
        
        private string answerField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class room {
        
        private int alloteesField;
        
        private bool alloteesFieldSpecified;
        
        private int capacityField;
        
        private bool capacityFieldSpecified;
        
        private int roomnumberField;
        
        private bool roomnumberFieldSpecified;
        
        /// <remarks/>
        public int Allotees {
            get {
                return this.alloteesField;
            }
            set {
                this.alloteesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlloteesSpecified {
            get {
                return this.alloteesFieldSpecified;
            }
            set {
                this.alloteesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapacitySpecified {
            get {
                return this.capacityFieldSpecified;
            }
            set {
                this.capacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Roomnumber {
            get {
                return this.roomnumberField;
            }
            set {
                this.roomnumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomnumberSpecified {
            get {
                return this.roomnumberFieldSpecified;
            }
            set {
                this.roomnumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cgatek {
        
        private string answerField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Hostel {
        
        private Cgatek[] gatekeeperListField;
        
        private string hostelNameField;
        
        private int numberOfRoomsField;
        
        private bool numberOfRoomsFieldSpecified;
        
        private room[] roomlistField;
        
        private CRT[] rtListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cgatek[] GatekeeperList {
            get {
                return this.gatekeeperListField;
            }
            set {
                this.gatekeeperListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostelName {
            get {
                return this.hostelNameField;
            }
            set {
                this.hostelNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfRooms {
            get {
                return this.numberOfRoomsField;
            }
            set {
                this.numberOfRoomsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified {
            get {
                return this.numberOfRoomsFieldSpecified;
            }
            set {
                this.numberOfRoomsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public room[] Roomlist {
            get {
                return this.roomlistField;
            }
            set {
                this.roomlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CRT[] RtList {
            get {
                return this.rtListField;
            }
            set {
                this.rtListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regstCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void reggkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regrtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isAdminCompletedEventHandler(object sender, isAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isAdminResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isAdminResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isStudentCompletedEventHandler(object sender, isStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isStudentResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isStudentResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isRTCompletedEventHandler(object sender, isRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isRTResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isRTResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isGatekeeperCompletedEventHandler(object sender, isGatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isGatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isGatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isGatekeeperResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isGatekeeperResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetAdminCompletedEventHandler(object sender, canresetAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetAdminResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetAdminResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetgatekeeperCompletedEventHandler(object sender, canresetgatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetgatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetgatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetgatekeeperResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetgatekeeperResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetstudentCompletedEventHandler(object sender, canresetstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetstudentResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetstudentResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetrtCompletedEventHandler(object sender, canresetrtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetrtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetrtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetrtResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetrtResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void mutateStNotificationCompletedEventHandler(object sender, mutateStNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mutateStNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mutateStNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cnotification[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cnotification[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedstudentCompletedEventHandler(object sender, loggedstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void mutateRtNotificationsCompletedEventHandler(object sender, mutateRtNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mutateRtNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mutateRtNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cnotification[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cnotification[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedRtCompletedEventHandler(object sender, loggedRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void mutateGKNotificationsCompletedEventHandler(object sender, mutateGKNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mutateGKNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mutateGKNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cnotification[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cnotification[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void logged_GatekeeperCompletedEventHandler(object sender, logged_GatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logged_GatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logged_GatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addhostelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void rtnamesCompletedEventHandler(object sender, rtnamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rtnamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rtnamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void hostelsCompletedEventHandler(object sender, hostelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hostelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hostelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void gknamesCompletedEventHandler(object sender, gknamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gknamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gknamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591