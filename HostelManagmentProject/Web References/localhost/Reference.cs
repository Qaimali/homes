//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HostelManagmentProject.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback registerStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerGatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GatekeeperLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeAdminPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeGateKeeperPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeStudentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback logged_GatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfavailableRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfavailableGateKeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback addhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback hostelIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAllHostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerForHostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback isHostelRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfRegisteredStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback registeredStudentIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfAllotedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback indexForAllottedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback allotStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback addnotificationforStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePendingStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback student_checkinOperationCompleted;
        
        private System.Threading.SendOrPostCallback student_checkOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback visitor_checkInOperationCompleted;
        
        private System.Threading.SendOrPostCallback visitor_checkOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfallotedRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback complaintsfromstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback complaintsfromRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback listOfComplainFromRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIndexedComplaintsFromRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNotificationForRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteComplaintsfromStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteComplaintsfromRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllotedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewGateKeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback uniqueStudentidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::HostelManagmentProject.Properties.Settings.Default.HostelManagmentProject_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event registerStudentCompletedEventHandler registerStudentCompleted;
        
        /// <remarks/>
        public event registerGatekeeperCompletedEventHandler registerGatekeeperCompleted;
        
        /// <remarks/>
        public event registerRtCompletedEventHandler registerRtCompleted;
        
        /// <remarks/>
        public event registerAdminCompletedEventHandler registerAdminCompleted;
        
        /// <remarks/>
        public event AdminLoginCompletedEventHandler AdminLoginCompleted;
        
        /// <remarks/>
        public event StudentLoginCompletedEventHandler StudentLoginCompleted;
        
        /// <remarks/>
        public event LoginRTCompletedEventHandler LoginRTCompleted;
        
        /// <remarks/>
        public event GatekeeperLoginCompletedEventHandler GatekeeperLoginCompleted;
        
        /// <remarks/>
        public event changeAdminPasswordCompletedEventHandler changeAdminPasswordCompleted;
        
        /// <remarks/>
        public event changeGateKeeperPasswordCompletedEventHandler changeGateKeeperPasswordCompleted;
        
        /// <remarks/>
        public event changeStudentPasswordCompletedEventHandler changeStudentPasswordCompleted;
        
        /// <remarks/>
        public event canresetrtCompletedEventHandler canresetrtCompleted;
        
        /// <remarks/>
        public event loggedstudentCompletedEventHandler loggedstudentCompleted;
        
        /// <remarks/>
        public event loggedRtCompletedEventHandler loggedRtCompleted;
        
        /// <remarks/>
        public event logged_GatekeeperCompletedEventHandler logged_GatekeeperCompleted;
        
        /// <remarks/>
        public event listOfavailableRTCompletedEventHandler listOfavailableRTCompleted;
        
        /// <remarks/>
        public event listOfavailableGateKeeperCompletedEventHandler listOfavailableGateKeeperCompleted;
        
        /// <remarks/>
        public event addhostelCompletedEventHandler addhostelCompleted;
        
        /// <remarks/>
        public event hostelIndexCompletedEventHandler hostelIndexCompleted;
        
        /// <remarks/>
        public event listOfAllHostelCompletedEventHandler listOfAllHostelCompleted;
        
        /// <remarks/>
        public event registerForHostelCompletedEventHandler registerForHostelCompleted;
        
        /// <remarks/>
        public event isHostelRegisteredCompletedEventHandler isHostelRegisteredCompleted;
        
        /// <remarks/>
        public event listOfRegisteredStudentCompletedEventHandler listOfRegisteredStudentCompleted;
        
        /// <remarks/>
        public event registeredStudentIndexCompletedEventHandler registeredStudentIndexCompleted;
        
        /// <remarks/>
        public event listOfAllotedStudentCompletedEventHandler listOfAllotedStudentCompleted;
        
        /// <remarks/>
        public event indexForAllottedStudentCompletedEventHandler indexForAllottedStudentCompleted;
        
        /// <remarks/>
        public event allotStudentCompletedEventHandler allotStudentCompleted;
        
        /// <remarks/>
        public event addnotificationforStudentCompletedEventHandler addnotificationforStudentCompleted;
        
        /// <remarks/>
        public event deletePendingStudentCompletedEventHandler deletePendingStudentCompleted;
        
        /// <remarks/>
        public event student_checkinCompletedEventHandler student_checkinCompleted;
        
        /// <remarks/>
        public event student_checkOutCompletedEventHandler student_checkOutCompleted;
        
        /// <remarks/>
        public event visitor_checkInCompletedEventHandler visitor_checkInCompleted;
        
        /// <remarks/>
        public event visitor_checkOutCompletedEventHandler visitor_checkOutCompleted;
        
        /// <remarks/>
        public event listOfallotedRTCompletedEventHandler listOfallotedRTCompleted;
        
        /// <remarks/>
        public event complaintsfromstudentCompletedEventHandler complaintsfromstudentCompleted;
        
        /// <remarks/>
        public event complaintsfromRTCompletedEventHandler complaintsfromRTCompleted;
        
        /// <remarks/>
        public event listOfComplainFromRtCompletedEventHandler listOfComplainFromRtCompleted;
        
        /// <remarks/>
        public event getIndexedComplaintsFromRtCompletedEventHandler getIndexedComplaintsFromRtCompleted;
        
        /// <remarks/>
        public event addNotificationForRtCompletedEventHandler addNotificationForRtCompleted;
        
        /// <remarks/>
        public event deleteComplaintsfromStudentsCompletedEventHandler deleteComplaintsfromStudentsCompleted;
        
        /// <remarks/>
        public event deleteComplaintsfromRTCompletedEventHandler deleteComplaintsfromRTCompleted;
        
        /// <remarks/>
        public event deleteAllotedStudentCompletedEventHandler deleteAllotedStudentCompleted;
        
        /// <remarks/>
        public event AddNewRTCompletedEventHandler AddNewRTCompleted;
        
        /// <remarks/>
        public event AddNewGateKeeperCompletedEventHandler AddNewGateKeeperCompleted;
        
        /// <remarks/>
        public event uniqueStudentidCompletedEventHandler uniqueStudentidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("registerStudent", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void registerStudentAsync(string username, string password, string question, string answer) {
            this.registerStudentAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void registerStudentAsync(string username, string password, string question, string answer, object userState) {
            if ((this.registerStudentOperationCompleted == null)) {
                this.registerStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterStudentOperationCompleted);
            }
            this.InvokeAsync("registerStudent", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.registerStudentOperationCompleted, userState);
        }
        
        private void OnregisterStudentOperationCompleted(object arg) {
            if ((this.registerStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerGatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerGatekeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("registerGatekeeper", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void registerGatekeeperAsync(string username, string password, string question, string answer) {
            this.registerGatekeeperAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void registerGatekeeperAsync(string username, string password, string question, string answer, object userState) {
            if ((this.registerGatekeeperOperationCompleted == null)) {
                this.registerGatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterGatekeeperOperationCompleted);
            }
            this.InvokeAsync("registerGatekeeper", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.registerGatekeeperOperationCompleted, userState);
        }
        
        private void OnregisterGatekeeperOperationCompleted(object arg) {
            if ((this.registerGatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerGatekeeperCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerRt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("registerRt", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void registerRtAsync(string username, string password, string question, string answer) {
            this.registerRtAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void registerRtAsync(string username, string password, string question, string answer, object userState) {
            if ((this.registerRtOperationCompleted == null)) {
                this.registerRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterRtOperationCompleted);
            }
            this.InvokeAsync("registerRt", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.registerRtOperationCompleted, userState);
        }
        
        private void OnregisterRtOperationCompleted(object arg) {
            if ((this.registerRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerRtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("registerAdmin", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void registerAdminAsync(string username, string password, string question, string answer) {
            this.registerAdminAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void registerAdminAsync(string username, string password, string question, string answer, object userState) {
            if ((this.registerAdminOperationCompleted == null)) {
                this.registerAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterAdminOperationCompleted);
            }
            this.InvokeAsync("registerAdmin", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.registerAdminOperationCompleted, userState);
        }
        
        private void OnregisterAdminOperationCompleted(object arg) {
            if ((this.registerAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AdminLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool AdminLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AdminLoginResultSpecified) {
            object[] results = this.Invoke("AdminLogin", new object[] {
                        username,
                        password});
            AdminLoginResult = ((bool)(results[0]));
            AdminLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AdminLoginAsync(string username, string password) {
            this.AdminLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AdminLoginAsync(string username, string password, object userState) {
            if ((this.AdminLoginOperationCompleted == null)) {
                this.AdminLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminLoginOperationCompleted);
            }
            this.InvokeAsync("AdminLogin", new object[] {
                        username,
                        password}, this.AdminLoginOperationCompleted, userState);
        }
        
        private void OnAdminLoginOperationCompleted(object arg) {
            if ((this.AdminLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminLoginCompleted(this, new AdminLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/StudentLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StudentLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool StudentLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool StudentLoginResultSpecified) {
            object[] results = this.Invoke("StudentLogin", new object[] {
                        username,
                        password});
            StudentLoginResult = ((bool)(results[0]));
            StudentLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void StudentLoginAsync(string username, string password) {
            this.StudentLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void StudentLoginAsync(string username, string password, object userState) {
            if ((this.StudentLoginOperationCompleted == null)) {
                this.StudentLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentLoginOperationCompleted);
            }
            this.InvokeAsync("StudentLogin", new object[] {
                        username,
                        password}, this.StudentLoginOperationCompleted, userState);
        }
        
        private void OnStudentLoginOperationCompleted(object arg) {
            if ((this.StudentLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentLoginCompleted(this, new StudentLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LoginRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoginRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool LoginRTResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool LoginRTResultSpecified) {
            object[] results = this.Invoke("LoginRT", new object[] {
                        username,
                        password});
            LoginRTResult = ((bool)(results[0]));
            LoginRTResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void LoginRTAsync(string username, string password) {
            this.LoginRTAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginRTAsync(string username, string password, object userState) {
            if ((this.LoginRTOperationCompleted == null)) {
                this.LoginRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginRTOperationCompleted);
            }
            this.InvokeAsync("LoginRT", new object[] {
                        username,
                        password}, this.LoginRTOperationCompleted, userState);
        }
        
        private void OnLoginRTOperationCompleted(object arg) {
            if ((this.LoginRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginRTCompleted(this, new LoginRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GatekeeperLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GatekeeperLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool GatekeeperLoginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GatekeeperLoginResultSpecified) {
            object[] results = this.Invoke("GatekeeperLogin", new object[] {
                        username,
                        password});
            GatekeeperLoginResult = ((bool)(results[0]));
            GatekeeperLoginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void GatekeeperLoginAsync(string username, string password) {
            this.GatekeeperLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GatekeeperLoginAsync(string username, string password, object userState) {
            if ((this.GatekeeperLoginOperationCompleted == null)) {
                this.GatekeeperLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatekeeperLoginOperationCompleted);
            }
            this.InvokeAsync("GatekeeperLogin", new object[] {
                        username,
                        password}, this.GatekeeperLoginOperationCompleted, userState);
        }
        
        private void OnGatekeeperLoginOperationCompleted(object arg) {
            if ((this.GatekeeperLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatekeeperLoginCompleted(this, new GatekeeperLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/changeAdminPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changeAdminPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool changeAdminPasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool changeAdminPasswordResultSpecified) {
            object[] results = this.Invoke("changeAdminPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            changeAdminPasswordResult = ((bool)(results[0]));
            changeAdminPasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void changeAdminPasswordAsync(string n1, string q1, string a1, string pass) {
            this.changeAdminPasswordAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void changeAdminPasswordAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.changeAdminPasswordOperationCompleted == null)) {
                this.changeAdminPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeAdminPasswordOperationCompleted);
            }
            this.InvokeAsync("changeAdminPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.changeAdminPasswordOperationCompleted, userState);
        }
        
        private void OnchangeAdminPasswordOperationCompleted(object arg) {
            if ((this.changeAdminPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeAdminPasswordCompleted(this, new changeAdminPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/changeGateKeeperPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changeGateKeeperPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool changeGateKeeperPasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool changeGateKeeperPasswordResultSpecified) {
            object[] results = this.Invoke("changeGateKeeperPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            changeGateKeeperPasswordResult = ((bool)(results[0]));
            changeGateKeeperPasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void changeGateKeeperPasswordAsync(string n1, string q1, string a1, string pass) {
            this.changeGateKeeperPasswordAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void changeGateKeeperPasswordAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.changeGateKeeperPasswordOperationCompleted == null)) {
                this.changeGateKeeperPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeGateKeeperPasswordOperationCompleted);
            }
            this.InvokeAsync("changeGateKeeperPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.changeGateKeeperPasswordOperationCompleted, userState);
        }
        
        private void OnchangeGateKeeperPasswordOperationCompleted(object arg) {
            if ((this.changeGateKeeperPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeGateKeeperPasswordCompleted(this, new changeGateKeeperPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/changeStudentPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changeStudentPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool changeStudentPasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool changeStudentPasswordResultSpecified) {
            object[] results = this.Invoke("changeStudentPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            changeStudentPasswordResult = ((bool)(results[0]));
            changeStudentPasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void changeStudentPasswordAsync(string n1, string q1, string a1, string pass) {
            this.changeStudentPasswordAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void changeStudentPasswordAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.changeStudentPasswordOperationCompleted == null)) {
                this.changeStudentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeStudentPasswordOperationCompleted);
            }
            this.InvokeAsync("changeStudentPassword", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.changeStudentPasswordOperationCompleted, userState);
        }
        
        private void OnchangeStudentPasswordOperationCompleted(object arg) {
            if ((this.changeStudentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeStudentPasswordCompleted(this, new changeStudentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetrt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetrtResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetrtResultSpecified) {
            object[] results = this.Invoke("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetrtResult = ((bool)(results[0]));
            canresetrtResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass) {
            this.canresetrtAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetrtOperationCompleted == null)) {
                this.canresetrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetrtOperationCompleted);
            }
            this.InvokeAsync("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetrtOperationCompleted, userState);
        }
        
        private void OncanresetrtOperationCompleted(object arg) {
            if ((this.canresetrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetrtCompleted(this, new canresetrtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent loggedstudent() {
            object[] results = this.Invoke("loggedstudent", new object[0]);
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void loggedstudentAsync() {
            this.loggedstudentAsync(null);
        }
        
        /// <remarks/>
        public void loggedstudentAsync(object userState) {
            if ((this.loggedstudentOperationCompleted == null)) {
                this.loggedstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedstudentOperationCompleted);
            }
            this.InvokeAsync("loggedstudent", new object[0], this.loggedstudentOperationCompleted, userState);
        }
        
        private void OnloggedstudentOperationCompleted(object arg) {
            if ((this.loggedstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedstudentCompleted(this, new loggedstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CRT loggedRt() {
            object[] results = this.Invoke("loggedRt", new object[0]);
            return ((CRT)(results[0]));
        }
        
        /// <remarks/>
        public void loggedRtAsync() {
            this.loggedRtAsync(null);
        }
        
        /// <remarks/>
        public void loggedRtAsync(object userState) {
            if ((this.loggedRtOperationCompleted == null)) {
                this.loggedRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedRtOperationCompleted);
            }
            this.InvokeAsync("loggedRt", new object[0], this.loggedRtOperationCompleted, userState);
        }
        
        private void OnloggedRtOperationCompleted(object arg) {
            if ((this.loggedRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedRtCompleted(this, new loggedRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/logged_Gatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cgatek logged_Gatekeeper() {
            object[] results = this.Invoke("logged_Gatekeeper", new object[0]);
            return ((Cgatek)(results[0]));
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync() {
            this.logged_GatekeeperAsync(null);
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync(object userState) {
            if ((this.logged_GatekeeperOperationCompleted == null)) {
                this.logged_GatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogged_GatekeeperOperationCompleted);
            }
            this.InvokeAsync("logged_Gatekeeper", new object[0], this.logged_GatekeeperOperationCompleted, userState);
        }
        
        private void Onlogged_GatekeeperOperationCompleted(object arg) {
            if ((this.logged_GatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logged_GatekeeperCompleted(this, new logged_GatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfavailableRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public CRT[] listOfavailableRT() {
            object[] results = this.Invoke("listOfavailableRT", new object[0]);
            return ((CRT[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfavailableRTAsync() {
            this.listOfavailableRTAsync(null);
        }
        
        /// <remarks/>
        public void listOfavailableRTAsync(object userState) {
            if ((this.listOfavailableRTOperationCompleted == null)) {
                this.listOfavailableRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfavailableRTOperationCompleted);
            }
            this.InvokeAsync("listOfavailableRT", new object[0], this.listOfavailableRTOperationCompleted, userState);
        }
        
        private void OnlistOfavailableRTOperationCompleted(object arg) {
            if ((this.listOfavailableRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfavailableRTCompleted(this, new listOfavailableRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfavailableGateKeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cgatek[] listOfavailableGateKeeper() {
            object[] results = this.Invoke("listOfavailableGateKeeper", new object[0]);
            return ((Cgatek[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfavailableGateKeeperAsync() {
            this.listOfavailableGateKeeperAsync(null);
        }
        
        /// <remarks/>
        public void listOfavailableGateKeeperAsync(object userState) {
            if ((this.listOfavailableGateKeeperOperationCompleted == null)) {
                this.listOfavailableGateKeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfavailableGateKeeperOperationCompleted);
            }
            this.InvokeAsync("listOfavailableGateKeeper", new object[0], this.listOfavailableGateKeeperOperationCompleted, userState);
        }
        
        private void OnlistOfavailableGateKeeperOperationCompleted(object arg) {
            if ((this.listOfavailableGateKeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfavailableGateKeeperCompleted(this, new listOfavailableGateKeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addhostel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostelName, int roomCapcity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool roomCapcitySpecified, int numberofRooms, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numberofRoomsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RT, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gateKeeperist) {
            this.Invoke("addhostel", new object[] {
                        hostelName,
                        roomCapcity,
                        roomCapcitySpecified,
                        numberofRooms,
                        numberofRoomsSpecified,
                        RT,
                        gateKeeperist});
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostelName, int roomCapcity, bool roomCapcitySpecified, int numberofRooms, bool numberofRoomsSpecified, string RT, string gateKeeperist) {
            this.addhostelAsync(hostelName, roomCapcity, roomCapcitySpecified, numberofRooms, numberofRoomsSpecified, RT, gateKeeperist, null);
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostelName, int roomCapcity, bool roomCapcitySpecified, int numberofRooms, bool numberofRoomsSpecified, string RT, string gateKeeperist, object userState) {
            if ((this.addhostelOperationCompleted == null)) {
                this.addhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddhostelOperationCompleted);
            }
            this.InvokeAsync("addhostel", new object[] {
                        hostelName,
                        roomCapcity,
                        roomCapcitySpecified,
                        numberofRooms,
                        numberofRoomsSpecified,
                        RT,
                        gateKeeperist}, this.addhostelOperationCompleted, userState);
        }
        
        private void OnaddhostelOperationCompleted(object arg) {
            if ((this.addhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addhostelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/hostelIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Hostel hostelIndex(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("hostelIndex", new object[] {
                        index,
                        indexSpecified});
            return ((Hostel)(results[0]));
        }
        
        /// <remarks/>
        public void hostelIndexAsync(int index, bool indexSpecified) {
            this.hostelIndexAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void hostelIndexAsync(int index, bool indexSpecified, object userState) {
            if ((this.hostelIndexOperationCompleted == null)) {
                this.hostelIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhostelIndexOperationCompleted);
            }
            this.InvokeAsync("hostelIndex", new object[] {
                        index,
                        indexSpecified}, this.hostelIndexOperationCompleted, userState);
        }
        
        private void OnhostelIndexOperationCompleted(object arg) {
            if ((this.hostelIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hostelIndexCompleted(this, new hostelIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfAllHostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Hostel[] listOfAllHostel() {
            object[] results = this.Invoke("listOfAllHostel", new object[0]);
            return ((Hostel[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAllHostelAsync() {
            this.listOfAllHostelAsync(null);
        }
        
        /// <remarks/>
        public void listOfAllHostelAsync(object userState) {
            if ((this.listOfAllHostelOperationCompleted == null)) {
                this.listOfAllHostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAllHostelOperationCompleted);
            }
            this.InvokeAsync("listOfAllHostel", new object[0], this.listOfAllHostelOperationCompleted, userState);
        }
        
        private void OnlistOfAllHostelOperationCompleted(object arg) {
            if ((this.listOfAllHostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAllHostelCompleted(this, new listOfAllHostelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerForHostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerForHostel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent s) {
            this.Invoke("registerForHostel", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void registerForHostelAsync(Cstudent s) {
            this.registerForHostelAsync(s, null);
        }
        
        /// <remarks/>
        public void registerForHostelAsync(Cstudent s, object userState) {
            if ((this.registerForHostelOperationCompleted == null)) {
                this.registerForHostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterForHostelOperationCompleted);
            }
            this.InvokeAsync("registerForHostel", new object[] {
                        s}, this.registerForHostelOperationCompleted, userState);
        }
        
        private void OnregisterForHostelOperationCompleted(object arg) {
            if ((this.registerForHostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerForHostelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isHostelRegistered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isHostelRegistered([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, out bool isHostelRegisteredResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isHostelRegisteredResultSpecified) {
            object[] results = this.Invoke("isHostelRegistered", new object[] {
                        name});
            isHostelRegisteredResult = ((bool)(results[0]));
            isHostelRegisteredResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isHostelRegisteredAsync(string name) {
            this.isHostelRegisteredAsync(name, null);
        }
        
        /// <remarks/>
        public void isHostelRegisteredAsync(string name, object userState) {
            if ((this.isHostelRegisteredOperationCompleted == null)) {
                this.isHostelRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisHostelRegisteredOperationCompleted);
            }
            this.InvokeAsync("isHostelRegistered", new object[] {
                        name}, this.isHostelRegisteredOperationCompleted, userState);
        }
        
        private void OnisHostelRegisteredOperationCompleted(object arg) {
            if ((this.isHostelRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isHostelRegisteredCompleted(this, new isHostelRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfRegisteredStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cstudent[] listOfRegisteredStudent() {
            object[] results = this.Invoke("listOfRegisteredStudent", new object[0]);
            return ((Cstudent[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfRegisteredStudentAsync() {
            this.listOfRegisteredStudentAsync(null);
        }
        
        /// <remarks/>
        public void listOfRegisteredStudentAsync(object userState) {
            if ((this.listOfRegisteredStudentOperationCompleted == null)) {
                this.listOfRegisteredStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfRegisteredStudentOperationCompleted);
            }
            this.InvokeAsync("listOfRegisteredStudent", new object[0], this.listOfRegisteredStudentOperationCompleted, userState);
        }
        
        private void OnlistOfRegisteredStudentOperationCompleted(object arg) {
            if ((this.listOfRegisteredStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfRegisteredStudentCompleted(this, new listOfRegisteredStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registeredStudentIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent registeredStudentIndex(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("registeredStudentIndex", new object[] {
                        index,
                        indexSpecified});
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void registeredStudentIndexAsync(int index, bool indexSpecified) {
            this.registeredStudentIndexAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void registeredStudentIndexAsync(int index, bool indexSpecified, object userState) {
            if ((this.registeredStudentIndexOperationCompleted == null)) {
                this.registeredStudentIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisteredStudentIndexOperationCompleted);
            }
            this.InvokeAsync("registeredStudentIndex", new object[] {
                        index,
                        indexSpecified}, this.registeredStudentIndexOperationCompleted, userState);
        }
        
        private void OnregisteredStudentIndexOperationCompleted(object arg) {
            if ((this.registeredStudentIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registeredStudentIndexCompleted(this, new registeredStudentIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfAllotedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cstudent[] listOfAllotedStudent() {
            object[] results = this.Invoke("listOfAllotedStudent", new object[0]);
            return ((Cstudent[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfAllotedStudentAsync() {
            this.listOfAllotedStudentAsync(null);
        }
        
        /// <remarks/>
        public void listOfAllotedStudentAsync(object userState) {
            if ((this.listOfAllotedStudentOperationCompleted == null)) {
                this.listOfAllotedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfAllotedStudentOperationCompleted);
            }
            this.InvokeAsync("listOfAllotedStudent", new object[0], this.listOfAllotedStudentOperationCompleted, userState);
        }
        
        private void OnlistOfAllotedStudentOperationCompleted(object arg) {
            if ((this.listOfAllotedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfAllotedStudentCompleted(this, new listOfAllotedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/indexForAllottedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent indexForAllottedStudent(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("indexForAllottedStudent", new object[] {
                        index,
                        indexSpecified});
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void indexForAllottedStudentAsync(int index, bool indexSpecified) {
            this.indexForAllottedStudentAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void indexForAllottedStudentAsync(int index, bool indexSpecified, object userState) {
            if ((this.indexForAllottedStudentOperationCompleted == null)) {
                this.indexForAllottedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnindexForAllottedStudentOperationCompleted);
            }
            this.InvokeAsync("indexForAllottedStudent", new object[] {
                        index,
                        indexSpecified}, this.indexForAllottedStudentOperationCompleted, userState);
        }
        
        private void OnindexForAllottedStudentOperationCompleted(object arg) {
            if ((this.indexForAllottedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.indexForAllottedStudentCompleted(this, new indexForAllottedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/allotStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void allotStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent std) {
            this.Invoke("allotStudent", new object[] {
                        std});
        }
        
        /// <remarks/>
        public void allotStudentAsync(Cstudent std) {
            this.allotStudentAsync(std, null);
        }
        
        /// <remarks/>
        public void allotStudentAsync(Cstudent std, object userState) {
            if ((this.allotStudentOperationCompleted == null)) {
                this.allotStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallotStudentOperationCompleted);
            }
            this.InvokeAsync("allotStudent", new object[] {
                        std}, this.allotStudentOperationCompleted, userState);
        }
        
        private void OnallotStudentOperationCompleted(object arg) {
            if ((this.allotStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allotStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addnotificationforStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addnotificationforStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string not) {
            this.Invoke("addnotificationforStudent", new object[] {
                        name,
                        regno,
                        not});
        }
        
        /// <remarks/>
        public void addnotificationforStudentAsync(string name, string regno, string not) {
            this.addnotificationforStudentAsync(name, regno, not, null);
        }
        
        /// <remarks/>
        public void addnotificationforStudentAsync(string name, string regno, string not, object userState) {
            if ((this.addnotificationforStudentOperationCompleted == null)) {
                this.addnotificationforStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddnotificationforStudentOperationCompleted);
            }
            this.InvokeAsync("addnotificationforStudent", new object[] {
                        name,
                        regno,
                        not}, this.addnotificationforStudentOperationCompleted, userState);
        }
        
        private void OnaddnotificationforStudentOperationCompleted(object arg) {
            if ((this.addnotificationforStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addnotificationforStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deletePendingStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletePendingStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent st) {
            this.Invoke("deletePendingStudent", new object[] {
                        st});
        }
        
        /// <remarks/>
        public void deletePendingStudentAsync(Cstudent st) {
            this.deletePendingStudentAsync(st, null);
        }
        
        /// <remarks/>
        public void deletePendingStudentAsync(Cstudent st, object userState) {
            if ((this.deletePendingStudentOperationCompleted == null)) {
                this.deletePendingStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePendingStudentOperationCompleted);
            }
            this.InvokeAsync("deletePendingStudent", new object[] {
                        st}, this.deletePendingStudentOperationCompleted, userState);
        }
        
        private void OndeletePendingStudentOperationCompleted(object arg) {
            if ((this.deletePendingStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePendingStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/student_checkin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void student_checkin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkin_date, out bool student_checkinResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool student_checkinResultSpecified) {
            object[] results = this.Invoke("student_checkin", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkin_date});
            student_checkinResult = ((bool)(results[0]));
            student_checkinResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void student_checkinAsync(string name, string regNo, string roomNo, string checkin_date) {
            this.student_checkinAsync(name, regNo, roomNo, checkin_date, null);
        }
        
        /// <remarks/>
        public void student_checkinAsync(string name, string regNo, string roomNo, string checkin_date, object userState) {
            if ((this.student_checkinOperationCompleted == null)) {
                this.student_checkinOperationCompleted = new System.Threading.SendOrPostCallback(this.Onstudent_checkinOperationCompleted);
            }
            this.InvokeAsync("student_checkin", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkin_date}, this.student_checkinOperationCompleted, userState);
        }
        
        private void Onstudent_checkinOperationCompleted(object arg) {
            if ((this.student_checkinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.student_checkinCompleted(this, new student_checkinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/student_checkOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void student_checkOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkOut_date, out bool student_checkOutResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool student_checkOutResultSpecified) {
            object[] results = this.Invoke("student_checkOut", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkOut_date});
            student_checkOutResult = ((bool)(results[0]));
            student_checkOutResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void student_checkOutAsync(string name, string regNo, string roomNo, string checkOut_date) {
            this.student_checkOutAsync(name, regNo, roomNo, checkOut_date, null);
        }
        
        /// <remarks/>
        public void student_checkOutAsync(string name, string regNo, string roomNo, string checkOut_date, object userState) {
            if ((this.student_checkOutOperationCompleted == null)) {
                this.student_checkOutOperationCompleted = new System.Threading.SendOrPostCallback(this.Onstudent_checkOutOperationCompleted);
            }
            this.InvokeAsync("student_checkOut", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkOut_date}, this.student_checkOutOperationCompleted, userState);
        }
        
        private void Onstudent_checkOutOperationCompleted(object arg) {
            if ((this.student_checkOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.student_checkOutCompleted(this, new student_checkOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/visitor_checkIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void visitor_checkIn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostregno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_cnic, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkin, out bool visitor_checkInResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool visitor_checkInResultSpecified) {
            object[] results = this.Invoke("visitor_checkIn", new object[] {
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkin});
            visitor_checkInResult = ((bool)(results[0]));
            visitor_checkInResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void visitor_checkInAsync(string hostregno, string visitor_name, string visitor_cnic, string checkin) {
            this.visitor_checkInAsync(hostregno, visitor_name, visitor_cnic, checkin, null);
        }
        
        /// <remarks/>
        public void visitor_checkInAsync(string hostregno, string visitor_name, string visitor_cnic, string checkin, object userState) {
            if ((this.visitor_checkInOperationCompleted == null)) {
                this.visitor_checkInOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvisitor_checkInOperationCompleted);
            }
            this.InvokeAsync("visitor_checkIn", new object[] {
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkin}, this.visitor_checkInOperationCompleted, userState);
        }
        
        private void Onvisitor_checkInOperationCompleted(object arg) {
            if ((this.visitor_checkInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.visitor_checkInCompleted(this, new visitor_checkInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/visitor_checkOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void visitor_checkOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostregno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_cnic, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkout, out bool visitor_checkOutResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool visitor_checkOutResultSpecified) {
            object[] results = this.Invoke("visitor_checkOut", new object[] {
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkout});
            visitor_checkOutResult = ((bool)(results[0]));
            visitor_checkOutResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void visitor_checkOutAsync(string hostregno, string visitor_name, string visitor_cnic, string checkout) {
            this.visitor_checkOutAsync(hostregno, visitor_name, visitor_cnic, checkout, null);
        }
        
        /// <remarks/>
        public void visitor_checkOutAsync(string hostregno, string visitor_name, string visitor_cnic, string checkout, object userState) {
            if ((this.visitor_checkOutOperationCompleted == null)) {
                this.visitor_checkOutOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvisitor_checkOutOperationCompleted);
            }
            this.InvokeAsync("visitor_checkOut", new object[] {
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkout}, this.visitor_checkOutOperationCompleted, userState);
        }
        
        private void Onvisitor_checkOutOperationCompleted(object arg) {
            if ((this.visitor_checkOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.visitor_checkOutCompleted(this, new visitor_checkOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfallotedRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public CRT[] listOfallotedRT() {
            object[] results = this.Invoke("listOfallotedRT", new object[0]);
            return ((CRT[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfallotedRTAsync() {
            this.listOfallotedRTAsync(null);
        }
        
        /// <remarks/>
        public void listOfallotedRTAsync(object userState) {
            if ((this.listOfallotedRTOperationCompleted == null)) {
                this.listOfallotedRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfallotedRTOperationCompleted);
            }
            this.InvokeAsync("listOfallotedRT", new object[0], this.listOfallotedRTOperationCompleted, userState);
        }
        
        private void OnlistOfallotedRTOperationCompleted(object arg) {
            if ((this.listOfallotedRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfallotedRTCompleted(this, new listOfallotedRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/complaintsfromstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void complaintsfromstudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string t1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNu) {
            this.Invoke("complaintsfromstudent", new object[] {
                        n1,
                        s1,
                        t1,
                        r1,
                        regNum,
                        roomNu});
        }
        
        /// <remarks/>
        public void complaintsfromstudentAsync(string n1, string s1, string t1, string r1, string regNum, string roomNu) {
            this.complaintsfromstudentAsync(n1, s1, t1, r1, regNum, roomNu, null);
        }
        
        /// <remarks/>
        public void complaintsfromstudentAsync(string n1, string s1, string t1, string r1, string regNum, string roomNu, object userState) {
            if ((this.complaintsfromstudentOperationCompleted == null)) {
                this.complaintsfromstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomplaintsfromstudentOperationCompleted);
            }
            this.InvokeAsync("complaintsfromstudent", new object[] {
                        n1,
                        s1,
                        t1,
                        r1,
                        regNum,
                        roomNu}, this.complaintsfromstudentOperationCompleted, userState);
        }
        
        private void OncomplaintsfromstudentOperationCompleted(object arg) {
            if ((this.complaintsfromstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.complaintsfromstudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/complaintsfromRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void complaintsfromRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string t1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1) {
            this.Invoke("complaintsfromRT", new object[] {
                        n1,
                        s1,
                        t1,
                        r1});
        }
        
        /// <remarks/>
        public void complaintsfromRTAsync(string n1, string s1, string t1, string r1) {
            this.complaintsfromRTAsync(n1, s1, t1, r1, null);
        }
        
        /// <remarks/>
        public void complaintsfromRTAsync(string n1, string s1, string t1, string r1, object userState) {
            if ((this.complaintsfromRTOperationCompleted == null)) {
                this.complaintsfromRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomplaintsfromRTOperationCompleted);
            }
            this.InvokeAsync("complaintsfromRT", new object[] {
                        n1,
                        s1,
                        t1,
                        r1}, this.complaintsfromRTOperationCompleted, userState);
        }
        
        private void OncomplaintsfromRTOperationCompleted(object arg) {
            if ((this.complaintsfromRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.complaintsfromRTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/listOfComplainFromRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Complaints[] listOfComplainFromRt() {
            object[] results = this.Invoke("listOfComplainFromRt", new object[0]);
            return ((Complaints[])(results[0]));
        }
        
        /// <remarks/>
        public void listOfComplainFromRtAsync() {
            this.listOfComplainFromRtAsync(null);
        }
        
        /// <remarks/>
        public void listOfComplainFromRtAsync(object userState) {
            if ((this.listOfComplainFromRtOperationCompleted == null)) {
                this.listOfComplainFromRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOfComplainFromRtOperationCompleted);
            }
            this.InvokeAsync("listOfComplainFromRt", new object[0], this.listOfComplainFromRtOperationCompleted, userState);
        }
        
        private void OnlistOfComplainFromRtOperationCompleted(object arg) {
            if ((this.listOfComplainFromRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listOfComplainFromRtCompleted(this, new listOfComplainFromRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getIndexedComplaintsFromRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Complaints getIndexedComplaintsFromRt(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("getIndexedComplaintsFromRt", new object[] {
                        index,
                        indexSpecified});
            return ((Complaints)(results[0]));
        }
        
        /// <remarks/>
        public void getIndexedComplaintsFromRtAsync(int index, bool indexSpecified) {
            this.getIndexedComplaintsFromRtAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void getIndexedComplaintsFromRtAsync(int index, bool indexSpecified, object userState) {
            if ((this.getIndexedComplaintsFromRtOperationCompleted == null)) {
                this.getIndexedComplaintsFromRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIndexedComplaintsFromRtOperationCompleted);
            }
            this.InvokeAsync("getIndexedComplaintsFromRt", new object[] {
                        index,
                        indexSpecified}, this.getIndexedComplaintsFromRtOperationCompleted, userState);
        }
        
        private void OngetIndexedComplaintsFromRtOperationCompleted(object arg) {
            if ((this.getIndexedComplaintsFromRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIndexedComplaintsFromRtCompleted(this, new getIndexedComplaintsFromRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addNotificationForRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addNotificationForRt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostel, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string not) {
            this.Invoke("addNotificationForRt", new object[] {
                        name,
                        hostel,
                        not});
        }
        
        /// <remarks/>
        public void addNotificationForRtAsync(string name, string hostel, string not) {
            this.addNotificationForRtAsync(name, hostel, not, null);
        }
        
        /// <remarks/>
        public void addNotificationForRtAsync(string name, string hostel, string not, object userState) {
            if ((this.addNotificationForRtOperationCompleted == null)) {
                this.addNotificationForRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNotificationForRtOperationCompleted);
            }
            this.InvokeAsync("addNotificationForRt", new object[] {
                        name,
                        hostel,
                        not}, this.addNotificationForRtOperationCompleted, userState);
        }
        
        private void OnaddNotificationForRtOperationCompleted(object arg) {
            if ((this.addNotificationForRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNotificationForRtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteComplaintsfromStudents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteComplaintsfromStudents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Complaints comp) {
            this.Invoke("deleteComplaintsfromStudents", new object[] {
                        comp});
        }
        
        /// <remarks/>
        public void deleteComplaintsfromStudentsAsync(Complaints comp) {
            this.deleteComplaintsfromStudentsAsync(comp, null);
        }
        
        /// <remarks/>
        public void deleteComplaintsfromStudentsAsync(Complaints comp, object userState) {
            if ((this.deleteComplaintsfromStudentsOperationCompleted == null)) {
                this.deleteComplaintsfromStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteComplaintsfromStudentsOperationCompleted);
            }
            this.InvokeAsync("deleteComplaintsfromStudents", new object[] {
                        comp}, this.deleteComplaintsfromStudentsOperationCompleted, userState);
        }
        
        private void OndeleteComplaintsfromStudentsOperationCompleted(object arg) {
            if ((this.deleteComplaintsfromStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteComplaintsfromStudentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteComplaintsfromRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteComplaintsfromRT(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            this.Invoke("deleteComplaintsfromRT", new object[] {
                        index,
                        indexSpecified});
        }
        
        /// <remarks/>
        public void deleteComplaintsfromRTAsync(int index, bool indexSpecified) {
            this.deleteComplaintsfromRTAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void deleteComplaintsfromRTAsync(int index, bool indexSpecified, object userState) {
            if ((this.deleteComplaintsfromRTOperationCompleted == null)) {
                this.deleteComplaintsfromRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteComplaintsfromRTOperationCompleted);
            }
            this.InvokeAsync("deleteComplaintsfromRT", new object[] {
                        index,
                        indexSpecified}, this.deleteComplaintsfromRTOperationCompleted, userState);
        }
        
        private void OndeleteComplaintsfromRTOperationCompleted(object arg) {
            if ((this.deleteComplaintsfromRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteComplaintsfromRTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteAllotedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAllotedStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent s) {
            this.Invoke("deleteAllotedStudent", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void deleteAllotedStudentAsync(Cstudent s) {
            this.deleteAllotedStudentAsync(s, null);
        }
        
        /// <remarks/>
        public void deleteAllotedStudentAsync(Cstudent s, object userState) {
            if ((this.deleteAllotedStudentOperationCompleted == null)) {
                this.deleteAllotedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllotedStudentOperationCompleted);
            }
            this.InvokeAsync("deleteAllotedStudent", new object[] {
                        s}, this.deleteAllotedStudentOperationCompleted, userState);
        }
        
        private void OndeleteAllotedStudentOperationCompleted(object arg) {
            if ((this.deleteAllotedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllotedStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddNewRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Hostel AddNewRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Hostel hostelP, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rtP) {
            object[] results = this.Invoke("AddNewRT", new object[] {
                        hostelP,
                        rtP});
            return ((Hostel)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewRTAsync(Hostel hostelP, string rtP) {
            this.AddNewRTAsync(hostelP, rtP, null);
        }
        
        /// <remarks/>
        public void AddNewRTAsync(Hostel hostelP, string rtP, object userState) {
            if ((this.AddNewRTOperationCompleted == null)) {
                this.AddNewRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewRTOperationCompleted);
            }
            this.InvokeAsync("AddNewRT", new object[] {
                        hostelP,
                        rtP}, this.AddNewRTOperationCompleted, userState);
        }
        
        private void OnAddNewRTOperationCompleted(object arg) {
            if ((this.AddNewRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewRTCompleted(this, new AddNewRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddNewGateKeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Hostel AddNewGateKeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Hostel hostelP, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string GateKeeperP) {
            object[] results = this.Invoke("AddNewGateKeeper", new object[] {
                        hostelP,
                        GateKeeperP});
            return ((Hostel)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewGateKeeperAsync(Hostel hostelP, string GateKeeperP) {
            this.AddNewGateKeeperAsync(hostelP, GateKeeperP, null);
        }
        
        /// <remarks/>
        public void AddNewGateKeeperAsync(Hostel hostelP, string GateKeeperP, object userState) {
            if ((this.AddNewGateKeeperOperationCompleted == null)) {
                this.AddNewGateKeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewGateKeeperOperationCompleted);
            }
            this.InvokeAsync("AddNewGateKeeper", new object[] {
                        hostelP,
                        GateKeeperP}, this.AddNewGateKeeperOperationCompleted, userState);
        }
        
        private void OnAddNewGateKeeperOperationCompleted(object arg) {
            if ((this.AddNewGateKeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewGateKeeperCompleted(this, new AddNewGateKeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/uniqueStudentid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uniqueStudentid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, out bool uniqueStudentidResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool uniqueStudentidResultSpecified) {
            object[] results = this.Invoke("uniqueStudentid", new object[] {
                        id});
            uniqueStudentidResult = ((bool)(results[0]));
            uniqueStudentidResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void uniqueStudentidAsync(string id) {
            this.uniqueStudentidAsync(id, null);
        }
        
        /// <remarks/>
        public void uniqueStudentidAsync(string id, object userState) {
            if ((this.uniqueStudentidOperationCompleted == null)) {
                this.uniqueStudentidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuniqueStudentidOperationCompleted);
            }
            this.InvokeAsync("uniqueStudentid", new object[] {
                        id}, this.uniqueStudentidOperationCompleted, userState);
        }
        
        private void OnuniqueStudentidOperationCompleted(object arg) {
            if ((this.uniqueStudentidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uniqueStudentidCompleted(this, new uniqueStudentidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cstudent {
        
        private string addressField;
        
        private string answerField;
        
        private string bloodGroupField;
        
        private bool checkInField;
        
        private bool checkInFieldSpecified;
        
        private string fatherNameField;
        
        private string fatherNumberField;
        
        private string genderField;
        
        private string guardianNameField;
        
        private string guardianNumberField;
        
        private string hostelNameField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string phoneNumberField;
        
        private string questionField;
        
        private string registrationNumberField;
        
        private string roomNumberField;
        
        private CDate[] student_checkinField;
        
        private CDate[] student_checkoutField;
        
        private string useridField;
        
        private Cvisistor[] visitorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BloodGroup {
            get {
                return this.bloodGroupField;
            }
            set {
                this.bloodGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckIn {
            get {
                return this.checkInField;
            }
            set {
                this.checkInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckInSpecified {
            get {
                return this.checkInFieldSpecified;
            }
            set {
                this.checkInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FatherNumber {
            get {
                return this.fatherNumberField;
            }
            set {
                this.fatherNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GuardianName {
            get {
                return this.guardianNameField;
            }
            set {
                this.guardianNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GuardianNumber {
            get {
                return this.guardianNumberField;
            }
            set {
                this.guardianNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostelName {
            get {
                return this.hostelNameField;
            }
            set {
                this.hostelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegistrationNumber {
            get {
                return this.registrationNumberField;
            }
            set {
                this.registrationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoomNumber {
            get {
                return this.roomNumberField;
            }
            set {
                this.roomNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CDate[] Student_checkin {
            get {
                return this.student_checkinField;
            }
            set {
                this.student_checkinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CDate[] Student_checkout {
            get {
                return this.student_checkoutField;
            }
            set {
                this.student_checkoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cvisistor[] Visitors {
            get {
                return this.visitorsField;
            }
            set {
                this.visitorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cnotification {
        
        private string notificationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class room {
        
        private int alloteesField;
        
        private bool alloteesFieldSpecified;
        
        private int capacityField;
        
        private bool capacityFieldSpecified;
        
        private int roomnumberField;
        
        private bool roomnumberFieldSpecified;
        
        /// <remarks/>
        public int Allotees {
            get {
                return this.alloteesField;
            }
            set {
                this.alloteesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlloteesSpecified {
            get {
                return this.alloteesFieldSpecified;
            }
            set {
                this.alloteesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapacitySpecified {
            get {
                return this.capacityFieldSpecified;
            }
            set {
                this.capacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Roomnumber {
            get {
                return this.roomnumberField;
            }
            set {
                this.roomnumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomnumberSpecified {
            get {
                return this.roomnumberFieldSpecified;
            }
            set {
                this.roomnumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Hostel {
        
        private Cgatek[] gatekeeperListField;
        
        private string hostelNameField;
        
        private int numberOfRoomsField;
        
        private bool numberOfRoomsFieldSpecified;
        
        private room[] roomlistField;
        
        private CRT[] rtListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cgatek[] GatekeeperList {
            get {
                return this.gatekeeperListField;
            }
            set {
                this.gatekeeperListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostelName {
            get {
                return this.hostelNameField;
            }
            set {
                this.hostelNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfRooms {
            get {
                return this.numberOfRoomsField;
            }
            set {
                this.numberOfRoomsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified {
            get {
                return this.numberOfRoomsFieldSpecified;
            }
            set {
                this.numberOfRoomsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public room[] Roomlist {
            get {
                return this.roomlistField;
            }
            set {
                this.roomlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CRT[] RtList {
            get {
                return this.rtListField;
            }
            set {
                this.rtListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cgatek {
        
        private string allotedHostelField;
        
        private string answerField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AllotedHostel {
            get {
                return this.allotedHostelField;
            }
            set {
                this.allotedHostelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CRT {
        
        private string allotedHostelField;
        
        private string answerField;
        
        private Complaints[] complaintsforRTField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AllotedHostel {
            get {
                return this.allotedHostelField;
            }
            set {
                this.allotedHostelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Complaints[] ComplaintsforRT {
            get {
                return this.complaintsforRTField;
            }
            set {
                this.complaintsforRTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Complaints {
        
        private string complaintSubjectField;
        
        private string nameField;
        
        private string registrationNumberField;
        
        private string residencyofpersonField;
        
        private string roomNumberField;
        
        private string textCompliantsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ComplaintSubject {
            get {
                return this.complaintSubjectField;
            }
            set {
                this.complaintSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegistrationNumber {
            get {
                return this.registrationNumberField;
            }
            set {
                this.registrationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Residencyofperson {
            get {
                return this.residencyofpersonField;
            }
            set {
                this.residencyofpersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoomNumber {
            get {
                return this.roomNumberField;
            }
            set {
                this.roomNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TextCompliants {
            get {
                return this.textCompliantsField;
            }
            set {
                this.textCompliantsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cvisistor {
        
        private string checkInField;
        
        private bool checkInboolField;
        
        private bool checkInboolFieldSpecified;
        
        private string checkOutField;
        
        private string cnicField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckIn {
            get {
                return this.checkInField;
            }
            set {
                this.checkInField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckInbool {
            get {
                return this.checkInboolField;
            }
            set {
                this.checkInboolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CheckInboolSpecified {
            get {
                return this.checkInboolFieldSpecified;
            }
            set {
                this.checkInboolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckOut {
            get {
                return this.checkOutField;
            }
            set {
                this.checkOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnic {
            get {
                return this.cnicField;
            }
            set {
                this.cnicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CDate {
        
        private string dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerGatekeeperCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerRtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AdminLoginCompletedEventHandler(object sender, AdminLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdminLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdminLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AdminLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AdminLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void StudentLoginCompletedEventHandler(object sender, StudentLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool StudentLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool StudentLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void LoginRTCompletedEventHandler(object sender, LoginRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool LoginRTResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool LoginRTResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GatekeeperLoginCompletedEventHandler(object sender, GatekeeperLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatekeeperLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatekeeperLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool GatekeeperLoginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool GatekeeperLoginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void changeAdminPasswordCompletedEventHandler(object sender, changeAdminPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeAdminPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeAdminPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool changeAdminPasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool changeAdminPasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void changeGateKeeperPasswordCompletedEventHandler(object sender, changeGateKeeperPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeGateKeeperPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeGateKeeperPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool changeGateKeeperPasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool changeGateKeeperPasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void changeStudentPasswordCompletedEventHandler(object sender, changeStudentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeStudentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeStudentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool changeStudentPasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool changeStudentPasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetrtCompletedEventHandler(object sender, canresetrtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetrtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetrtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetrtResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetrtResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedstudentCompletedEventHandler(object sender, loggedstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedRtCompletedEventHandler(object sender, loggedRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRT)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void logged_GatekeeperCompletedEventHandler(object sender, logged_GatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logged_GatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logged_GatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cgatek Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cgatek)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfavailableRTCompletedEventHandler(object sender, listOfavailableRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfavailableRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfavailableRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRT[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRT[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfavailableGateKeeperCompletedEventHandler(object sender, listOfavailableGateKeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfavailableGateKeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfavailableGateKeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cgatek[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cgatek[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addhostelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void hostelIndexCompletedEventHandler(object sender, hostelIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hostelIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hostelIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfAllHostelCompletedEventHandler(object sender, listOfAllHostelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAllHostelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAllHostelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerForHostelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isHostelRegisteredCompletedEventHandler(object sender, isHostelRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isHostelRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isHostelRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isHostelRegisteredResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isHostelRegisteredResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfRegisteredStudentCompletedEventHandler(object sender, listOfRegisteredStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfRegisteredStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfRegisteredStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registeredStudentIndexCompletedEventHandler(object sender, registeredStudentIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registeredStudentIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registeredStudentIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfAllotedStudentCompletedEventHandler(object sender, listOfAllotedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfAllotedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfAllotedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void indexForAllottedStudentCompletedEventHandler(object sender, indexForAllottedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class indexForAllottedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal indexForAllottedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void allotStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addnotificationforStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deletePendingStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void student_checkinCompletedEventHandler(object sender, student_checkinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class student_checkinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal student_checkinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool student_checkinResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool student_checkinResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void student_checkOutCompletedEventHandler(object sender, student_checkOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class student_checkOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal student_checkOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool student_checkOutResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool student_checkOutResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void visitor_checkInCompletedEventHandler(object sender, visitor_checkInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class visitor_checkInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal visitor_checkInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool visitor_checkInResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool visitor_checkInResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void visitor_checkOutCompletedEventHandler(object sender, visitor_checkOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class visitor_checkOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal visitor_checkOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool visitor_checkOutResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool visitor_checkOutResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfallotedRTCompletedEventHandler(object sender, listOfallotedRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfallotedRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfallotedRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRT[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRT[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void complaintsfromstudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void complaintsfromRTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void listOfComplainFromRtCompletedEventHandler(object sender, listOfComplainFromRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listOfComplainFromRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listOfComplainFromRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Complaints[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Complaints[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getIndexedComplaintsFromRtCompletedEventHandler(object sender, getIndexedComplaintsFromRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIndexedComplaintsFromRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIndexedComplaintsFromRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Complaints Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Complaints)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addNotificationForRtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteComplaintsfromStudentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteComplaintsfromRTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteAllotedStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddNewRTCompletedEventHandler(object sender, AddNewRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddNewGateKeeperCompletedEventHandler(object sender, AddNewGateKeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewGateKeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewGateKeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void uniqueStudentidCompletedEventHandler(object sender, uniqueStudentidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uniqueStudentidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uniqueStudentidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool uniqueStudentidResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool uniqueStudentidResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591