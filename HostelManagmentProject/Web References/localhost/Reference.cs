//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HostelManagmentProject.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback regstOperationCompleted;
        
        private System.Threading.SendOrPostCallback reggkOperationCompleted;
        
        private System.Threading.SendOrPostCallback regrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback regadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback isAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback isStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback isRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback isGatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetgatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback canresetrtOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback loggedRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback logged_GatekeeperOperationCompleted;
        
        private System.Threading.SendOrPostCallback addhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback rtnamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback hostelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback gknamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback showallhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerforhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback isHostelRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback registeredstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getregisteredstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback allotedStudentsforhostelOperationCompleted;
        
        private System.Threading.SendOrPostCallback indexForAllottedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback allotstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback addnotificationforsearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletependingstOperationCompleted;
        
        private System.Threading.SendOrPostCallback student_checkinOperationCompleted;
        
        private System.Threading.SendOrPostCallback student_checkOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback visitor_checkInOperationCompleted;
        
        private System.Threading.SendOrPostCallback visitor_checkOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback allotedRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback complaintsfromstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback complaintsfromRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback getComplainFromRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIndexedComplaintsFromRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNotificationForRtOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteComplaintsfromStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteComplaintsfromRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllotedStudentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::HostelManagmentProject.Properties.Settings.Default.HostelManagmentProject_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event regstCompletedEventHandler regstCompleted;
        
        /// <remarks/>
        public event reggkCompletedEventHandler reggkCompleted;
        
        /// <remarks/>
        public event regrtCompletedEventHandler regrtCompleted;
        
        /// <remarks/>
        public event regadminCompletedEventHandler regadminCompleted;
        
        /// <remarks/>
        public event isAdminCompletedEventHandler isAdminCompleted;
        
        /// <remarks/>
        public event isStudentCompletedEventHandler isStudentCompleted;
        
        /// <remarks/>
        public event isRTCompletedEventHandler isRTCompleted;
        
        /// <remarks/>
        public event isGatekeeperCompletedEventHandler isGatekeeperCompleted;
        
        /// <remarks/>
        public event canresetAdminCompletedEventHandler canresetAdminCompleted;
        
        /// <remarks/>
        public event canresetgatekeeperCompletedEventHandler canresetgatekeeperCompleted;
        
        /// <remarks/>
        public event canresetstudentCompletedEventHandler canresetstudentCompleted;
        
        /// <remarks/>
        public event canresetrtCompletedEventHandler canresetrtCompleted;
        
        /// <remarks/>
        public event loggedstudentCompletedEventHandler loggedstudentCompleted;
        
        /// <remarks/>
        public event loggedRtCompletedEventHandler loggedRtCompleted;
        
        /// <remarks/>
        public event logged_GatekeeperCompletedEventHandler logged_GatekeeperCompleted;
        
        /// <remarks/>
        public event addhostelCompletedEventHandler addhostelCompleted;
        
        /// <remarks/>
        public event rtnamesCompletedEventHandler rtnamesCompleted;
        
        /// <remarks/>
        public event hostelsCompletedEventHandler hostelsCompleted;
        
        /// <remarks/>
        public event gknamesCompletedEventHandler gknamesCompleted;
        
        /// <remarks/>
        public event showallhostelCompletedEventHandler showallhostelCompleted;
        
        /// <remarks/>
        public event registerforhostelCompletedEventHandler registerforhostelCompleted;
        
        /// <remarks/>
        public event isHostelRegisteredCompletedEventHandler isHostelRegisteredCompleted;
        
        /// <remarks/>
        public event registeredstudentCompletedEventHandler registeredstudentCompleted;
        
        /// <remarks/>
        public event getregisteredstudentCompletedEventHandler getregisteredstudentCompleted;
        
        /// <remarks/>
        public event allotedStudentsforhostelCompletedEventHandler allotedStudentsforhostelCompleted;
        
        /// <remarks/>
        public event indexForAllottedStudentCompletedEventHandler indexForAllottedStudentCompleted;
        
        /// <remarks/>
        public event allotstudentCompletedEventHandler allotstudentCompleted;
        
        /// <remarks/>
        public event addnotificationforsearchCompletedEventHandler addnotificationforsearchCompleted;
        
        /// <remarks/>
        public event deletependingstCompletedEventHandler deletependingstCompleted;
        
        /// <remarks/>
        public event student_checkinCompletedEventHandler student_checkinCompleted;
        
        /// <remarks/>
        public event student_checkOutCompletedEventHandler student_checkOutCompleted;
        
        /// <remarks/>
        public event visitor_checkInCompletedEventHandler visitor_checkInCompleted;
        
        /// <remarks/>
        public event visitor_checkOutCompletedEventHandler visitor_checkOutCompleted;
        
        /// <remarks/>
        public event allotedRTCompletedEventHandler allotedRTCompleted;
        
        /// <remarks/>
        public event complaintsfromstudentCompletedEventHandler complaintsfromstudentCompleted;
        
        /// <remarks/>
        public event complaintsfromRTCompletedEventHandler complaintsfromRTCompleted;
        
        /// <remarks/>
        public event getComplainFromRtCompletedEventHandler getComplainFromRtCompleted;
        
        /// <remarks/>
        public event getIndexedComplaintsFromRtCompletedEventHandler getIndexedComplaintsFromRtCompleted;
        
        /// <remarks/>
        public event addNotificationForRtCompletedEventHandler addNotificationForRtCompleted;
        
        /// <remarks/>
        public event deleteComplaintsfromStudentsCompletedEventHandler deleteComplaintsfromStudentsCompleted;
        
        /// <remarks/>
        public event deleteComplaintsfromRTCompletedEventHandler deleteComplaintsfromRTCompleted;
        
        /// <remarks/>
        public event deleteAllotedStudentCompletedEventHandler deleteAllotedStudentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regst([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regst", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regstAsync(string username, string password, string question, string answer) {
            this.regstAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regstAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regstOperationCompleted == null)) {
                this.regstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregstOperationCompleted);
            }
            this.InvokeAsync("regst", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regstOperationCompleted, userState);
        }
        
        private void OnregstOperationCompleted(object arg) {
            if ((this.regstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regstCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/reggk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void reggk([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("reggk", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void reggkAsync(string username, string password, string question, string answer) {
            this.reggkAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void reggkAsync(string username, string password, string question, string answer, object userState) {
            if ((this.reggkOperationCompleted == null)) {
                this.reggkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreggkOperationCompleted);
            }
            this.InvokeAsync("reggk", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.reggkOperationCompleted, userState);
        }
        
        private void OnreggkOperationCompleted(object arg) {
            if ((this.reggkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reggkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regrt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regrt", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regrtAsync(string username, string password, string question, string answer) {
            this.regrtAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regrtAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regrtOperationCompleted == null)) {
                this.regrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregrtOperationCompleted);
            }
            this.InvokeAsync("regrt", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regrtOperationCompleted, userState);
        }
        
        private void OnregrtOperationCompleted(object arg) {
            if ((this.regrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regrtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/regadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void regadmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string question, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string answer) {
            this.Invoke("regadmin", new object[] {
                        username,
                        password,
                        question,
                        answer});
        }
        
        /// <remarks/>
        public void regadminAsync(string username, string password, string question, string answer) {
            this.regadminAsync(username, password, question, answer, null);
        }
        
        /// <remarks/>
        public void regadminAsync(string username, string password, string question, string answer, object userState) {
            if ((this.regadminOperationCompleted == null)) {
                this.regadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregadminOperationCompleted);
            }
            this.InvokeAsync("regadmin", new object[] {
                        username,
                        password,
                        question,
                        answer}, this.regadminOperationCompleted, userState);
        }
        
        private void OnregadminOperationCompleted(object arg) {
            if ((this.regadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.regadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isAdminResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isAdminResultSpecified) {
            object[] results = this.Invoke("isAdmin", new object[] {
                        username,
                        password});
            isAdminResult = ((bool)(results[0]));
            isAdminResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isAdminAsync(string username, string password) {
            this.isAdminAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isAdminAsync(string username, string password, object userState) {
            if ((this.isAdminOperationCompleted == null)) {
                this.isAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisAdminOperationCompleted);
            }
            this.InvokeAsync("isAdmin", new object[] {
                        username,
                        password}, this.isAdminOperationCompleted, userState);
        }
        
        private void OnisAdminOperationCompleted(object arg) {
            if ((this.isAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isAdminCompleted(this, new isAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isStudentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isStudentResultSpecified) {
            object[] results = this.Invoke("isStudent", new object[] {
                        username,
                        password});
            isStudentResult = ((bool)(results[0]));
            isStudentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isStudentAsync(string username, string password) {
            this.isStudentAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isStudentAsync(string username, string password, object userState) {
            if ((this.isStudentOperationCompleted == null)) {
                this.isStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisStudentOperationCompleted);
            }
            this.InvokeAsync("isStudent", new object[] {
                        username,
                        password}, this.isStudentOperationCompleted, userState);
        }
        
        private void OnisStudentOperationCompleted(object arg) {
            if ((this.isStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isStudentCompleted(this, new isStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isRTResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isRTResultSpecified) {
            object[] results = this.Invoke("isRT", new object[] {
                        username,
                        password});
            isRTResult = ((bool)(results[0]));
            isRTResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isRTAsync(string username, string password) {
            this.isRTAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isRTAsync(string username, string password, object userState) {
            if ((this.isRTOperationCompleted == null)) {
                this.isRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRTOperationCompleted);
            }
            this.InvokeAsync("isRT", new object[] {
                        username,
                        password}, this.isRTOperationCompleted, userState);
        }
        
        private void OnisRTOperationCompleted(object arg) {
            if ((this.isRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRTCompleted(this, new isRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isGatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isGatekeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool isGatekeeperResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isGatekeeperResultSpecified) {
            object[] results = this.Invoke("isGatekeeper", new object[] {
                        username,
                        password});
            isGatekeeperResult = ((bool)(results[0]));
            isGatekeeperResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isGatekeeperAsync(string username, string password) {
            this.isGatekeeperAsync(username, password, null);
        }
        
        /// <remarks/>
        public void isGatekeeperAsync(string username, string password, object userState) {
            if ((this.isGatekeeperOperationCompleted == null)) {
                this.isGatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisGatekeeperOperationCompleted);
            }
            this.InvokeAsync("isGatekeeper", new object[] {
                        username,
                        password}, this.isGatekeeperOperationCompleted, userState);
        }
        
        private void OnisGatekeeperOperationCompleted(object arg) {
            if ((this.isGatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isGatekeeperCompleted(this, new isGatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetAdmin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetAdminResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetAdminResultSpecified) {
            object[] results = this.Invoke("canresetAdmin", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetAdminResult = ((bool)(results[0]));
            canresetAdminResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetAdminAsync(string n1, string q1, string a1, string pass) {
            this.canresetAdminAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetAdminAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetAdminOperationCompleted == null)) {
                this.canresetAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetAdminOperationCompleted);
            }
            this.InvokeAsync("canresetAdmin", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetAdminOperationCompleted, userState);
        }
        
        private void OncanresetAdminOperationCompleted(object arg) {
            if ((this.canresetAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetAdminCompleted(this, new canresetAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetgatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetgatekeeper([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetgatekeeperResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetgatekeeperResultSpecified) {
            object[] results = this.Invoke("canresetgatekeeper", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetgatekeeperResult = ((bool)(results[0]));
            canresetgatekeeperResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetgatekeeperAsync(string n1, string q1, string a1, string pass) {
            this.canresetgatekeeperAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetgatekeeperAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetgatekeeperOperationCompleted == null)) {
                this.canresetgatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetgatekeeperOperationCompleted);
            }
            this.InvokeAsync("canresetgatekeeper", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetgatekeeperOperationCompleted, userState);
        }
        
        private void OncanresetgatekeeperOperationCompleted(object arg) {
            if ((this.canresetgatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetgatekeeperCompleted(this, new canresetgatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetstudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetstudentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetstudentResultSpecified) {
            object[] results = this.Invoke("canresetstudent", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetstudentResult = ((bool)(results[0]));
            canresetstudentResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetstudentAsync(string n1, string q1, string a1, string pass) {
            this.canresetstudentAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetstudentAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetstudentOperationCompleted == null)) {
                this.canresetstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetstudentOperationCompleted);
            }
            this.InvokeAsync("canresetstudent", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetstudentOperationCompleted, userState);
        }
        
        private void OncanresetstudentOperationCompleted(object arg) {
            if ((this.canresetstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetstudentCompleted(this, new canresetstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/canresetrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void canresetrt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string q1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string a1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pass, out bool canresetrtResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool canresetrtResultSpecified) {
            object[] results = this.Invoke("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass});
            canresetrtResult = ((bool)(results[0]));
            canresetrtResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass) {
            this.canresetrtAsync(n1, q1, a1, pass, null);
        }
        
        /// <remarks/>
        public void canresetrtAsync(string n1, string q1, string a1, string pass, object userState) {
            if ((this.canresetrtOperationCompleted == null)) {
                this.canresetrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanresetrtOperationCompleted);
            }
            this.InvokeAsync("canresetrt", new object[] {
                        n1,
                        q1,
                        a1,
                        pass}, this.canresetrtOperationCompleted, userState);
        }
        
        private void OncanresetrtOperationCompleted(object arg) {
            if ((this.canresetrtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canresetrtCompleted(this, new canresetrtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent loggedstudent() {
            object[] results = this.Invoke("loggedstudent", new object[0]);
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void loggedstudentAsync() {
            this.loggedstudentAsync(null);
        }
        
        /// <remarks/>
        public void loggedstudentAsync(object userState) {
            if ((this.loggedstudentOperationCompleted == null)) {
                this.loggedstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedstudentOperationCompleted);
            }
            this.InvokeAsync("loggedstudent", new object[0], this.loggedstudentOperationCompleted, userState);
        }
        
        private void OnloggedstudentOperationCompleted(object arg) {
            if ((this.loggedstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedstudentCompleted(this, new loggedstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/loggedRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CRT loggedRt() {
            object[] results = this.Invoke("loggedRt", new object[0]);
            return ((CRT)(results[0]));
        }
        
        /// <remarks/>
        public void loggedRtAsync() {
            this.loggedRtAsync(null);
        }
        
        /// <remarks/>
        public void loggedRtAsync(object userState) {
            if ((this.loggedRtOperationCompleted == null)) {
                this.loggedRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloggedRtOperationCompleted);
            }
            this.InvokeAsync("loggedRt", new object[0], this.loggedRtOperationCompleted, userState);
        }
        
        private void OnloggedRtOperationCompleted(object arg) {
            if ((this.loggedRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loggedRtCompleted(this, new loggedRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/logged_Gatekeeper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cgatek logged_Gatekeeper() {
            object[] results = this.Invoke("logged_Gatekeeper", new object[0]);
            return ((Cgatek)(results[0]));
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync() {
            this.logged_GatekeeperAsync(null);
        }
        
        /// <remarks/>
        public void logged_GatekeeperAsync(object userState) {
            if ((this.logged_GatekeeperOperationCompleted == null)) {
                this.logged_GatekeeperOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlogged_GatekeeperOperationCompleted);
            }
            this.InvokeAsync("logged_Gatekeeper", new object[0], this.logged_GatekeeperOperationCompleted, userState);
        }
        
        private void Onlogged_GatekeeperOperationCompleted(object arg) {
            if ((this.logged_GatekeeperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logged_GatekeeperCompleted(this, new logged_GatekeeperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addhostel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostname, int roomcapcity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool roomcapcitySpecified, int nuofrooms, [System.Xml.Serialization.XmlIgnoreAttribute()] bool nuofroomsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string g1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string g2) {
            this.Invoke("addhostel", new object[] {
                        hostname,
                        roomcapcity,
                        roomcapcitySpecified,
                        nuofrooms,
                        nuofroomsSpecified,
                        r1,
                        r2,
                        g1,
                        g2});
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostname, int roomcapcity, bool roomcapcitySpecified, int nuofrooms, bool nuofroomsSpecified, string r1, string r2, string g1, string g2) {
            this.addhostelAsync(hostname, roomcapcity, roomcapcitySpecified, nuofrooms, nuofroomsSpecified, r1, r2, g1, g2, null);
        }
        
        /// <remarks/>
        public void addhostelAsync(string hostname, int roomcapcity, bool roomcapcitySpecified, int nuofrooms, bool nuofroomsSpecified, string r1, string r2, string g1, string g2, object userState) {
            if ((this.addhostelOperationCompleted == null)) {
                this.addhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddhostelOperationCompleted);
            }
            this.InvokeAsync("addhostel", new object[] {
                        hostname,
                        roomcapcity,
                        roomcapcitySpecified,
                        nuofrooms,
                        nuofroomsSpecified,
                        r1,
                        r2,
                        g1,
                        g2}, this.addhostelOperationCompleted, userState);
        }
        
        private void OnaddhostelOperationCompleted(object arg) {
            if ((this.addhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addhostelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/rtnames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] rtnames() {
            object[] results = this.Invoke("rtnames", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void rtnamesAsync() {
            this.rtnamesAsync(null);
        }
        
        /// <remarks/>
        public void rtnamesAsync(object userState) {
            if ((this.rtnamesOperationCompleted == null)) {
                this.rtnamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrtnamesOperationCompleted);
            }
            this.InvokeAsync("rtnames", new object[0], this.rtnamesOperationCompleted, userState);
        }
        
        private void OnrtnamesOperationCompleted(object arg) {
            if ((this.rtnamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rtnamesCompleted(this, new rtnamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/hostels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Hostel hostels(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("hostels", new object[] {
                        index,
                        indexSpecified});
            return ((Hostel)(results[0]));
        }
        
        /// <remarks/>
        public void hostelsAsync(int index, bool indexSpecified) {
            this.hostelsAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void hostelsAsync(int index, bool indexSpecified, object userState) {
            if ((this.hostelsOperationCompleted == null)) {
                this.hostelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhostelsOperationCompleted);
            }
            this.InvokeAsync("hostels", new object[] {
                        index,
                        indexSpecified}, this.hostelsOperationCompleted, userState);
        }
        
        private void OnhostelsOperationCompleted(object arg) {
            if ((this.hostelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hostelsCompleted(this, new hostelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/gknames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] gknames() {
            object[] results = this.Invoke("gknames", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void gknamesAsync() {
            this.gknamesAsync(null);
        }
        
        /// <remarks/>
        public void gknamesAsync(object userState) {
            if ((this.gknamesOperationCompleted == null)) {
                this.gknamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngknamesOperationCompleted);
            }
            this.InvokeAsync("gknames", new object[0], this.gknamesOperationCompleted, userState);
        }
        
        private void OngknamesOperationCompleted(object arg) {
            if ((this.gknamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.gknamesCompleted(this, new gknamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/showallhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Hostel[] showallhostel() {
            object[] results = this.Invoke("showallhostel", new object[0]);
            return ((Hostel[])(results[0]));
        }
        
        /// <remarks/>
        public void showallhostelAsync() {
            this.showallhostelAsync(null);
        }
        
        /// <remarks/>
        public void showallhostelAsync(object userState) {
            if ((this.showallhostelOperationCompleted == null)) {
                this.showallhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowallhostelOperationCompleted);
            }
            this.InvokeAsync("showallhostel", new object[0], this.showallhostelOperationCompleted, userState);
        }
        
        private void OnshowallhostelOperationCompleted(object arg) {
            if ((this.showallhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showallhostelCompleted(this, new showallhostelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registerforhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerforhostel([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent s) {
            this.Invoke("registerforhostel", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void registerforhostelAsync(Cstudent s) {
            this.registerforhostelAsync(s, null);
        }
        
        /// <remarks/>
        public void registerforhostelAsync(Cstudent s, object userState) {
            if ((this.registerforhostelOperationCompleted == null)) {
                this.registerforhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterforhostelOperationCompleted);
            }
            this.InvokeAsync("registerforhostel", new object[] {
                        s}, this.registerforhostelOperationCompleted, userState);
        }
        
        private void OnregisterforhostelOperationCompleted(object arg) {
            if ((this.registerforhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerforhostelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/isHostelRegistered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isHostelRegistered([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, out bool isHostelRegisteredResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool isHostelRegisteredResultSpecified) {
            object[] results = this.Invoke("isHostelRegistered", new object[] {
                        name});
            isHostelRegisteredResult = ((bool)(results[0]));
            isHostelRegisteredResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isHostelRegisteredAsync(string name) {
            this.isHostelRegisteredAsync(name, null);
        }
        
        /// <remarks/>
        public void isHostelRegisteredAsync(string name, object userState) {
            if ((this.isHostelRegisteredOperationCompleted == null)) {
                this.isHostelRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisHostelRegisteredOperationCompleted);
            }
            this.InvokeAsync("isHostelRegistered", new object[] {
                        name}, this.isHostelRegisteredOperationCompleted, userState);
        }
        
        private void OnisHostelRegisteredOperationCompleted(object arg) {
            if ((this.isHostelRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isHostelRegisteredCompleted(this, new isHostelRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/registeredstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cstudent[] registeredstudent() {
            object[] results = this.Invoke("registeredstudent", new object[0]);
            return ((Cstudent[])(results[0]));
        }
        
        /// <remarks/>
        public void registeredstudentAsync() {
            this.registeredstudentAsync(null);
        }
        
        /// <remarks/>
        public void registeredstudentAsync(object userState) {
            if ((this.registeredstudentOperationCompleted == null)) {
                this.registeredstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisteredstudentOperationCompleted);
            }
            this.InvokeAsync("registeredstudent", new object[0], this.registeredstudentOperationCompleted, userState);
        }
        
        private void OnregisteredstudentOperationCompleted(object arg) {
            if ((this.registeredstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registeredstudentCompleted(this, new registeredstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getregisteredstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent getregisteredstudent(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("getregisteredstudent", new object[] {
                        index,
                        indexSpecified});
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void getregisteredstudentAsync(int index, bool indexSpecified) {
            this.getregisteredstudentAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void getregisteredstudentAsync(int index, bool indexSpecified, object userState) {
            if ((this.getregisteredstudentOperationCompleted == null)) {
                this.getregisteredstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetregisteredstudentOperationCompleted);
            }
            this.InvokeAsync("getregisteredstudent", new object[] {
                        index,
                        indexSpecified}, this.getregisteredstudentOperationCompleted, userState);
        }
        
        private void OngetregisteredstudentOperationCompleted(object arg) {
            if ((this.getregisteredstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getregisteredstudentCompleted(this, new getregisteredstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/allotedStudentsforhostel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Cstudent[] allotedStudentsforhostel() {
            object[] results = this.Invoke("allotedStudentsforhostel", new object[0]);
            return ((Cstudent[])(results[0]));
        }
        
        /// <remarks/>
        public void allotedStudentsforhostelAsync() {
            this.allotedStudentsforhostelAsync(null);
        }
        
        /// <remarks/>
        public void allotedStudentsforhostelAsync(object userState) {
            if ((this.allotedStudentsforhostelOperationCompleted == null)) {
                this.allotedStudentsforhostelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallotedStudentsforhostelOperationCompleted);
            }
            this.InvokeAsync("allotedStudentsforhostel", new object[0], this.allotedStudentsforhostelOperationCompleted, userState);
        }
        
        private void OnallotedStudentsforhostelOperationCompleted(object arg) {
            if ((this.allotedStudentsforhostelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allotedStudentsforhostelCompleted(this, new allotedStudentsforhostelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/indexForAllottedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Cstudent indexForAllottedStudent(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("indexForAllottedStudent", new object[] {
                        index,
                        indexSpecified});
            return ((Cstudent)(results[0]));
        }
        
        /// <remarks/>
        public void indexForAllottedStudentAsync(int index, bool indexSpecified) {
            this.indexForAllottedStudentAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void indexForAllottedStudentAsync(int index, bool indexSpecified, object userState) {
            if ((this.indexForAllottedStudentOperationCompleted == null)) {
                this.indexForAllottedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnindexForAllottedStudentOperationCompleted);
            }
            this.InvokeAsync("indexForAllottedStudent", new object[] {
                        index,
                        indexSpecified}, this.indexForAllottedStudentOperationCompleted, userState);
        }
        
        private void OnindexForAllottedStudentOperationCompleted(object arg) {
            if ((this.indexForAllottedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.indexForAllottedStudentCompleted(this, new indexForAllottedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/allotstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void allotstudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent std) {
            this.Invoke("allotstudent", new object[] {
                        std});
        }
        
        /// <remarks/>
        public void allotstudentAsync(Cstudent std) {
            this.allotstudentAsync(std, null);
        }
        
        /// <remarks/>
        public void allotstudentAsync(Cstudent std, object userState) {
            if ((this.allotstudentOperationCompleted == null)) {
                this.allotstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallotstudentOperationCompleted);
            }
            this.InvokeAsync("allotstudent", new object[] {
                        std}, this.allotstudentOperationCompleted, userState);
        }
        
        private void OnallotstudentOperationCompleted(object arg) {
            if ((this.allotstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allotstudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addnotificationforsearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addnotificationforsearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string not) {
            this.Invoke("addnotificationforsearch", new object[] {
                        name,
                        regno,
                        not});
        }
        
        /// <remarks/>
        public void addnotificationforsearchAsync(string name, string regno, string not) {
            this.addnotificationforsearchAsync(name, regno, not, null);
        }
        
        /// <remarks/>
        public void addnotificationforsearchAsync(string name, string regno, string not, object userState) {
            if ((this.addnotificationforsearchOperationCompleted == null)) {
                this.addnotificationforsearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddnotificationforsearchOperationCompleted);
            }
            this.InvokeAsync("addnotificationforsearch", new object[] {
                        name,
                        regno,
                        not}, this.addnotificationforsearchOperationCompleted, userState);
        }
        
        private void OnaddnotificationforsearchOperationCompleted(object arg) {
            if ((this.addnotificationforsearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addnotificationforsearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deletependingst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletependingst([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent st) {
            this.Invoke("deletependingst", new object[] {
                        st});
        }
        
        /// <remarks/>
        public void deletependingstAsync(Cstudent st) {
            this.deletependingstAsync(st, null);
        }
        
        /// <remarks/>
        public void deletependingstAsync(Cstudent st, object userState) {
            if ((this.deletependingstOperationCompleted == null)) {
                this.deletependingstOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletependingstOperationCompleted);
            }
            this.InvokeAsync("deletependingst", new object[] {
                        st}, this.deletependingstOperationCompleted, userState);
        }
        
        private void OndeletependingstOperationCompleted(object arg) {
            if ((this.deletependingstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletependingstCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/student_checkin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void student_checkin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkin_date, out bool student_checkinResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool student_checkinResultSpecified) {
            object[] results = this.Invoke("student_checkin", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkin_date});
            student_checkinResult = ((bool)(results[0]));
            student_checkinResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void student_checkinAsync(string name, string regNo, string roomNo, string checkin_date) {
            this.student_checkinAsync(name, regNo, roomNo, checkin_date, null);
        }
        
        /// <remarks/>
        public void student_checkinAsync(string name, string regNo, string roomNo, string checkin_date, object userState) {
            if ((this.student_checkinOperationCompleted == null)) {
                this.student_checkinOperationCompleted = new System.Threading.SendOrPostCallback(this.Onstudent_checkinOperationCompleted);
            }
            this.InvokeAsync("student_checkin", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkin_date}, this.student_checkinOperationCompleted, userState);
        }
        
        private void Onstudent_checkinOperationCompleted(object arg) {
            if ((this.student_checkinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.student_checkinCompleted(this, new student_checkinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/student_checkOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void student_checkOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkOut_date, out bool student_checkOutResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool student_checkOutResultSpecified) {
            object[] results = this.Invoke("student_checkOut", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkOut_date});
            student_checkOutResult = ((bool)(results[0]));
            student_checkOutResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void student_checkOutAsync(string name, string regNo, string roomNo, string checkOut_date) {
            this.student_checkOutAsync(name, regNo, roomNo, checkOut_date, null);
        }
        
        /// <remarks/>
        public void student_checkOutAsync(string name, string regNo, string roomNo, string checkOut_date, object userState) {
            if ((this.student_checkOutOperationCompleted == null)) {
                this.student_checkOutOperationCompleted = new System.Threading.SendOrPostCallback(this.Onstudent_checkOutOperationCompleted);
            }
            this.InvokeAsync("student_checkOut", new object[] {
                        name,
                        regNo,
                        roomNo,
                        checkOut_date}, this.student_checkOutOperationCompleted, userState);
        }
        
        private void Onstudent_checkOutOperationCompleted(object arg) {
            if ((this.student_checkOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.student_checkOutCompleted(this, new student_checkOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/visitor_checkIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void visitor_checkIn([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string host, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostregno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_cnic, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string room_number, out bool visitor_checkInResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool visitor_checkInResultSpecified) {
            object[] results = this.Invoke("visitor_checkIn", new object[] {
                        host,
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkin,
                        room_number});
            visitor_checkInResult = ((bool)(results[0]));
            visitor_checkInResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void visitor_checkInAsync(string host, string hostregno, string visitor_name, string visitor_cnic, string checkin, string room_number) {
            this.visitor_checkInAsync(host, hostregno, visitor_name, visitor_cnic, checkin, room_number, null);
        }
        
        /// <remarks/>
        public void visitor_checkInAsync(string host, string hostregno, string visitor_name, string visitor_cnic, string checkin, string room_number, object userState) {
            if ((this.visitor_checkInOperationCompleted == null)) {
                this.visitor_checkInOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvisitor_checkInOperationCompleted);
            }
            this.InvokeAsync("visitor_checkIn", new object[] {
                        host,
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkin,
                        room_number}, this.visitor_checkInOperationCompleted, userState);
        }
        
        private void Onvisitor_checkInOperationCompleted(object arg) {
            if ((this.visitor_checkInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.visitor_checkInCompleted(this, new visitor_checkInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/visitor_checkOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void visitor_checkOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string host, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostregno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string visitor_cnic, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string checkout, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string room_number, out bool visitor_checkOutResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool visitor_checkOutResultSpecified) {
            object[] results = this.Invoke("visitor_checkOut", new object[] {
                        host,
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkout,
                        room_number});
            visitor_checkOutResult = ((bool)(results[0]));
            visitor_checkOutResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void visitor_checkOutAsync(string host, string hostregno, string visitor_name, string visitor_cnic, string checkout, string room_number) {
            this.visitor_checkOutAsync(host, hostregno, visitor_name, visitor_cnic, checkout, room_number, null);
        }
        
        /// <remarks/>
        public void visitor_checkOutAsync(string host, string hostregno, string visitor_name, string visitor_cnic, string checkout, string room_number, object userState) {
            if ((this.visitor_checkOutOperationCompleted == null)) {
                this.visitor_checkOutOperationCompleted = new System.Threading.SendOrPostCallback(this.Onvisitor_checkOutOperationCompleted);
            }
            this.InvokeAsync("visitor_checkOut", new object[] {
                        host,
                        hostregno,
                        visitor_name,
                        visitor_cnic,
                        checkout,
                        room_number}, this.visitor_checkOutOperationCompleted, userState);
        }
        
        private void Onvisitor_checkOutOperationCompleted(object arg) {
            if ((this.visitor_checkOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.visitor_checkOutCompleted(this, new visitor_checkOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/allotedRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public CRT[] allotedRT() {
            object[] results = this.Invoke("allotedRT", new object[0]);
            return ((CRT[])(results[0]));
        }
        
        /// <remarks/>
        public void allotedRTAsync() {
            this.allotedRTAsync(null);
        }
        
        /// <remarks/>
        public void allotedRTAsync(object userState) {
            if ((this.allotedRTOperationCompleted == null)) {
                this.allotedRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallotedRTOperationCompleted);
            }
            this.InvokeAsync("allotedRT", new object[0], this.allotedRTOperationCompleted, userState);
        }
        
        private void OnallotedRTOperationCompleted(object arg) {
            if ((this.allotedRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allotedRTCompleted(this, new allotedRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/complaintsfromstudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void complaintsfromstudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string t1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string regNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string roomNu) {
            this.Invoke("complaintsfromstudent", new object[] {
                        n1,
                        s1,
                        t1,
                        r1,
                        regNum,
                        roomNu});
        }
        
        /// <remarks/>
        public void complaintsfromstudentAsync(string n1, string s1, string t1, string r1, string regNum, string roomNu) {
            this.complaintsfromstudentAsync(n1, s1, t1, r1, regNum, roomNu, null);
        }
        
        /// <remarks/>
        public void complaintsfromstudentAsync(string n1, string s1, string t1, string r1, string regNum, string roomNu, object userState) {
            if ((this.complaintsfromstudentOperationCompleted == null)) {
                this.complaintsfromstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomplaintsfromstudentOperationCompleted);
            }
            this.InvokeAsync("complaintsfromstudent", new object[] {
                        n1,
                        s1,
                        t1,
                        r1,
                        regNum,
                        roomNu}, this.complaintsfromstudentOperationCompleted, userState);
        }
        
        private void OncomplaintsfromstudentOperationCompleted(object arg) {
            if ((this.complaintsfromstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.complaintsfromstudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/complaintsfromRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void complaintsfromRT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string n1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string s1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string t1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string r1) {
            this.Invoke("complaintsfromRT", new object[] {
                        n1,
                        s1,
                        t1,
                        r1});
        }
        
        /// <remarks/>
        public void complaintsfromRTAsync(string n1, string s1, string t1, string r1) {
            this.complaintsfromRTAsync(n1, s1, t1, r1, null);
        }
        
        /// <remarks/>
        public void complaintsfromRTAsync(string n1, string s1, string t1, string r1, object userState) {
            if ((this.complaintsfromRTOperationCompleted == null)) {
                this.complaintsfromRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomplaintsfromRTOperationCompleted);
            }
            this.InvokeAsync("complaintsfromRT", new object[] {
                        n1,
                        s1,
                        t1,
                        r1}, this.complaintsfromRTOperationCompleted, userState);
        }
        
        private void OncomplaintsfromRTOperationCompleted(object arg) {
            if ((this.complaintsfromRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.complaintsfromRTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getComplainFromRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
        public Complaints[] getComplainFromRt() {
            object[] results = this.Invoke("getComplainFromRt", new object[0]);
            return ((Complaints[])(results[0]));
        }
        
        /// <remarks/>
        public void getComplainFromRtAsync() {
            this.getComplainFromRtAsync(null);
        }
        
        /// <remarks/>
        public void getComplainFromRtAsync(object userState) {
            if ((this.getComplainFromRtOperationCompleted == null)) {
                this.getComplainFromRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetComplainFromRtOperationCompleted);
            }
            this.InvokeAsync("getComplainFromRt", new object[0], this.getComplainFromRtOperationCompleted, userState);
        }
        
        private void OngetComplainFromRtOperationCompleted(object arg) {
            if ((this.getComplainFromRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getComplainFromRtCompleted(this, new getComplainFromRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getIndexedComplaintsFromRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Complaints getIndexedComplaintsFromRt(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            object[] results = this.Invoke("getIndexedComplaintsFromRt", new object[] {
                        index,
                        indexSpecified});
            return ((Complaints)(results[0]));
        }
        
        /// <remarks/>
        public void getIndexedComplaintsFromRtAsync(int index, bool indexSpecified) {
            this.getIndexedComplaintsFromRtAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void getIndexedComplaintsFromRtAsync(int index, bool indexSpecified, object userState) {
            if ((this.getIndexedComplaintsFromRtOperationCompleted == null)) {
                this.getIndexedComplaintsFromRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIndexedComplaintsFromRtOperationCompleted);
            }
            this.InvokeAsync("getIndexedComplaintsFromRt", new object[] {
                        index,
                        indexSpecified}, this.getIndexedComplaintsFromRtOperationCompleted, userState);
        }
        
        private void OngetIndexedComplaintsFromRtOperationCompleted(object arg) {
            if ((this.getIndexedComplaintsFromRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIndexedComplaintsFromRtCompleted(this, new getIndexedComplaintsFromRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/addNotificationForRt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addNotificationForRt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostel, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string not) {
            this.Invoke("addNotificationForRt", new object[] {
                        name,
                        hostel,
                        not});
        }
        
        /// <remarks/>
        public void addNotificationForRtAsync(string name, string hostel, string not) {
            this.addNotificationForRtAsync(name, hostel, not, null);
        }
        
        /// <remarks/>
        public void addNotificationForRtAsync(string name, string hostel, string not, object userState) {
            if ((this.addNotificationForRtOperationCompleted == null)) {
                this.addNotificationForRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNotificationForRtOperationCompleted);
            }
            this.InvokeAsync("addNotificationForRt", new object[] {
                        name,
                        hostel,
                        not}, this.addNotificationForRtOperationCompleted, userState);
        }
        
        private void OnaddNotificationForRtOperationCompleted(object arg) {
            if ((this.addNotificationForRtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNotificationForRtCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteComplaintsfromStudents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteComplaintsfromStudents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Complaints comp) {
            this.Invoke("deleteComplaintsfromStudents", new object[] {
                        comp});
        }
        
        /// <remarks/>
        public void deleteComplaintsfromStudentsAsync(Complaints comp) {
            this.deleteComplaintsfromStudentsAsync(comp, null);
        }
        
        /// <remarks/>
        public void deleteComplaintsfromStudentsAsync(Complaints comp, object userState) {
            if ((this.deleteComplaintsfromStudentsOperationCompleted == null)) {
                this.deleteComplaintsfromStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteComplaintsfromStudentsOperationCompleted);
            }
            this.InvokeAsync("deleteComplaintsfromStudents", new object[] {
                        comp}, this.deleteComplaintsfromStudentsOperationCompleted, userState);
        }
        
        private void OndeleteComplaintsfromStudentsOperationCompleted(object arg) {
            if ((this.deleteComplaintsfromStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteComplaintsfromStudentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteComplaintsfromRT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteComplaintsfromRT(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            this.Invoke("deleteComplaintsfromRT", new object[] {
                        index,
                        indexSpecified});
        }
        
        /// <remarks/>
        public void deleteComplaintsfromRTAsync(int index, bool indexSpecified) {
            this.deleteComplaintsfromRTAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void deleteComplaintsfromRTAsync(int index, bool indexSpecified, object userState) {
            if ((this.deleteComplaintsfromRTOperationCompleted == null)) {
                this.deleteComplaintsfromRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteComplaintsfromRTOperationCompleted);
            }
            this.InvokeAsync("deleteComplaintsfromRT", new object[] {
                        index,
                        indexSpecified}, this.deleteComplaintsfromRTOperationCompleted, userState);
        }
        
        private void OndeleteComplaintsfromRTOperationCompleted(object arg) {
            if ((this.deleteComplaintsfromRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteComplaintsfromRTCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteAllotedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAllotedStudent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Cstudent s) {
            this.Invoke("deleteAllotedStudent", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void deleteAllotedStudentAsync(Cstudent s) {
            this.deleteAllotedStudentAsync(s, null);
        }
        
        /// <remarks/>
        public void deleteAllotedStudentAsync(Cstudent s, object userState) {
            if ((this.deleteAllotedStudentOperationCompleted == null)) {
                this.deleteAllotedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllotedStudentOperationCompleted);
            }
            this.InvokeAsync("deleteAllotedStudent", new object[] {
                        s}, this.deleteAllotedStudentOperationCompleted, userState);
        }
        
        private void OndeleteAllotedStudentOperationCompleted(object arg) {
            if ((this.deleteAllotedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllotedStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cstudent {
        
        private string addressField;
        
        private string answerField;
        
        private string bloodGroupField;
        
        private string fatherNameField;
        
        private string fatherNumberField;
        
        private string genderField;
        
        private string guardianNameField;
        
        private string guardianNumberField;
        
        private string hostelNameField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string phoneNumberField;
        
        private string questionField;
        
        private string registrationNumberField;
        
        private string roomNumberField;
        
        private CDate[] student_checkinField;
        
        private CDate[] student_checkoutField;
        
        private string useridField;
        
        private Cvisistor[] visitorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BloodGroup {
            get {
                return this.bloodGroupField;
            }
            set {
                this.bloodGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FatherNumber {
            get {
                return this.fatherNumberField;
            }
            set {
                this.fatherNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GuardianName {
            get {
                return this.guardianNameField;
            }
            set {
                this.guardianNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GuardianNumber {
            get {
                return this.guardianNumberField;
            }
            set {
                this.guardianNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostelName {
            get {
                return this.hostelNameField;
            }
            set {
                this.hostelNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegistrationNumber {
            get {
                return this.registrationNumberField;
            }
            set {
                this.registrationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoomNumber {
            get {
                return this.roomNumberField;
            }
            set {
                this.roomNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CDate[] Student_checkin {
            get {
                return this.student_checkinField;
            }
            set {
                this.student_checkinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CDate[] Student_checkout {
            get {
                return this.student_checkoutField;
            }
            set {
                this.student_checkoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cvisistor[] Visitors {
            get {
                return this.visitorsField;
            }
            set {
                this.visitorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cnotification {
        
        private string notificationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Notification {
            get {
                return this.notificationField;
            }
            set {
                this.notificationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class room {
        
        private int alloteesField;
        
        private bool alloteesFieldSpecified;
        
        private int capacityField;
        
        private bool capacityFieldSpecified;
        
        private int roomnumberField;
        
        private bool roomnumberFieldSpecified;
        
        /// <remarks/>
        public int Allotees {
            get {
                return this.alloteesField;
            }
            set {
                this.alloteesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlloteesSpecified {
            get {
                return this.alloteesFieldSpecified;
            }
            set {
                this.alloteesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CapacitySpecified {
            get {
                return this.capacityFieldSpecified;
            }
            set {
                this.capacityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Roomnumber {
            get {
                return this.roomnumberField;
            }
            set {
                this.roomnumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomnumberSpecified {
            get {
                return this.roomnumberFieldSpecified;
            }
            set {
                this.roomnumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Hostel {
        
        private Cgatek[] gatekeeperListField;
        
        private string hostelNameField;
        
        private int numberOfRoomsField;
        
        private bool numberOfRoomsFieldSpecified;
        
        private room[] roomlistField;
        
        private CRT[] rtListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cgatek[] GatekeeperList {
            get {
                return this.gatekeeperListField;
            }
            set {
                this.gatekeeperListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostelName {
            get {
                return this.hostelNameField;
            }
            set {
                this.hostelNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfRooms {
            get {
                return this.numberOfRoomsField;
            }
            set {
                this.numberOfRoomsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified {
            get {
                return this.numberOfRoomsFieldSpecified;
            }
            set {
                this.numberOfRoomsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public room[] Roomlist {
            get {
                return this.roomlistField;
            }
            set {
                this.roomlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CRT[] RtList {
            get {
                return this.rtListField;
            }
            set {
                this.rtListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cgatek {
        
        private string answerField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CRT {
        
        private string allotedHostelField;
        
        private string answerField;
        
        private Complaints[] complaintsforRTField;
        
        private string nameField;
        
        private Cnotification[] notificationlistField;
        
        private string passwordField;
        
        private string questionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AllotedHostel {
            get {
                return this.allotedHostelField;
            }
            set {
                this.allotedHostelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Complaints[] ComplaintsforRT {
            get {
                return this.complaintsforRTField;
            }
            set {
                this.complaintsforRTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Cnotification[] Notificationlist {
            get {
                return this.notificationlistField;
            }
            set {
                this.notificationlistField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Complaints {
        
        private string complaintSubjectField;
        
        private string nameField;
        
        private string registrationNumberField;
        
        private string residencyofpersonField;
        
        private string roomNumberField;
        
        private string textCompliantsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ComplaintSubject {
            get {
                return this.complaintSubjectField;
            }
            set {
                this.complaintSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegistrationNumber {
            get {
                return this.registrationNumberField;
            }
            set {
                this.registrationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Residencyofperson {
            get {
                return this.residencyofpersonField;
            }
            set {
                this.residencyofpersonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoomNumber {
            get {
                return this.roomNumberField;
            }
            set {
                this.roomNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TextCompliants {
            get {
                return this.textCompliantsField;
            }
            set {
                this.textCompliantsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class Cvisistor {
        
        private string checkInField;
        
        private string checkOutField;
        
        private string cnicField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckIn {
            get {
                return this.checkInField;
            }
            set {
                this.checkInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckOut {
            get {
                return this.checkOutField;
            }
            set {
                this.checkOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cnic {
            get {
                return this.cnicField;
            }
            set {
                this.cnicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfService3")]
    public partial class CDate {
        
        private string dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regstCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void reggkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regrtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void regadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isAdminCompletedEventHandler(object sender, isAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isAdminResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isAdminResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isStudentCompletedEventHandler(object sender, isStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isStudentResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isStudentResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isRTCompletedEventHandler(object sender, isRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isRTResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isRTResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isGatekeeperCompletedEventHandler(object sender, isGatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isGatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isGatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isGatekeeperResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isGatekeeperResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetAdminCompletedEventHandler(object sender, canresetAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetAdminResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetAdminResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetgatekeeperCompletedEventHandler(object sender, canresetgatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetgatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetgatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetgatekeeperResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetgatekeeperResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetstudentCompletedEventHandler(object sender, canresetstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetstudentResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetstudentResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void canresetrtCompletedEventHandler(object sender, canresetrtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canresetrtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canresetrtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool canresetrtResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool canresetrtResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedstudentCompletedEventHandler(object sender, loggedstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void loggedRtCompletedEventHandler(object sender, loggedRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loggedRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loggedRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRT Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRT)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void logged_GatekeeperCompletedEventHandler(object sender, logged_GatekeeperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logged_GatekeeperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logged_GatekeeperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cgatek Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cgatek)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addhostelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void rtnamesCompletedEventHandler(object sender, rtnamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rtnamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rtnamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void hostelsCompletedEventHandler(object sender, hostelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hostelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hostelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void gknamesCompletedEventHandler(object sender, gknamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class gknamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal gknamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void showallhostelCompletedEventHandler(object sender, showallhostelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showallhostelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showallhostelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Hostel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Hostel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registerforhostelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void isHostelRegisteredCompletedEventHandler(object sender, isHostelRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isHostelRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isHostelRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool isHostelRegisteredResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isHostelRegisteredResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void registeredstudentCompletedEventHandler(object sender, registeredstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registeredstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registeredstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getregisteredstudentCompletedEventHandler(object sender, getregisteredstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getregisteredstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getregisteredstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void allotedStudentsforhostelCompletedEventHandler(object sender, allotedStudentsforhostelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allotedStudentsforhostelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allotedStudentsforhostelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void indexForAllottedStudentCompletedEventHandler(object sender, indexForAllottedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class indexForAllottedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal indexForAllottedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Cstudent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Cstudent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void allotstudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addnotificationforsearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deletependingstCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void student_checkinCompletedEventHandler(object sender, student_checkinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class student_checkinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal student_checkinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool student_checkinResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool student_checkinResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void student_checkOutCompletedEventHandler(object sender, student_checkOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class student_checkOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal student_checkOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool student_checkOutResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool student_checkOutResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void visitor_checkInCompletedEventHandler(object sender, visitor_checkInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class visitor_checkInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal visitor_checkInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool visitor_checkInResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool visitor_checkInResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void visitor_checkOutCompletedEventHandler(object sender, visitor_checkOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class visitor_checkOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal visitor_checkOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool visitor_checkOutResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool visitor_checkOutResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void allotedRTCompletedEventHandler(object sender, allotedRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allotedRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allotedRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRT[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRT[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void complaintsfromstudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void complaintsfromRTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getComplainFromRtCompletedEventHandler(object sender, getComplainFromRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getComplainFromRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getComplainFromRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Complaints[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Complaints[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getIndexedComplaintsFromRtCompletedEventHandler(object sender, getIndexedComplaintsFromRtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIndexedComplaintsFromRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIndexedComplaintsFromRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Complaints Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Complaints)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void addNotificationForRtCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteComplaintsfromStudentsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteComplaintsfromRTCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deleteAllotedStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591